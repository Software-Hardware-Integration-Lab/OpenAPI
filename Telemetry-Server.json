{
    "openapi": "3.0.3",
    "info": {
        "title": "Moot Telemetry Server",
        "description": "Collects telemetry from the various Moot Products.",
        "contact": {
            "name": "Elliot Huffman",
            "email": "elhuff@mootinc.com"
        },
        "license": {
            "name": "Proprietary",
            "url": "https://github.com/Moot-Inc/Telemetry-Server/blob/main/LICENSE"
        },
        "version": "appVersionFromConfigEngine"
    },
    "externalDocs": {
        "description": "Official Documentation",
        "url": "https://docs.mootinc.com"
    },
    "servers": [
        {
            "url": "https://telemetry.mootinc.com",
            "description": "Moot, Inc. hosted telemetry collection service."
        }
    ],
    "tags": [
        {
            "name": "Telemetry",
            "description": "Used to collect telemetry for the various Moot, Inc. products."
        },
        {
            "name": "Debug Mode",
            "description": "Various routes that available when debug mode is enabled for the server."
        }
    ],
    "paths": {
        "/API/Telemetry/MSM": {
            "post": {
                "operationId": "/API/Telemetry/MSM/Post",
                "tags": [
                    "Telemetry"
                ],
                "summary": "Receives Telemetry from the MSM product.",
                "description": "MSM specific telemetry collection. Includes counts of managed objects.",
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/MsmLowTelemetry"
                            }
                        }
                    }
                },
                "responses": {
                    "204": {
                        "description": "OK: Recorded Successfully."
                    },
                    "503": {
                        "$ref": "#/components/responses/503"
                    }
                }
            }
        },
        "/API/Telemetry/Custom": {
            "post": {
                "operationId": "/API/Telemetry/Custom/Post",
                "tags": [
                    "Telemetry"
                ],
                "summary": "Receives Telemetry from various products.",
                "description": "Generic telemetry collection. Will be primarily used for white label engine tracking. One instance generally represents one tenant deployment.",
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/TelemetryInstance"
                            }
                        }
                    }
                },
                "responses": {
                    "204": {
                        "description": "OK: Recorded Successfully."
                    },
                    "503": {
                        "$ref": "#/components/responses/503"
                    }
                }
            }
        },
        "/Debug/DbConnection": {
            "get": {
                "operationId": "/Debug/GetDbConnection",
                "tags": [
                    "Debug Mode"
                ],
                "responses": {
                    "200": {
                        "description": "An indicator that shows if the DB has been recognized as connected successfully."
                    }
                }
            }
        },
        "/Debug/PrimaryConnectionString": {
            "get": {
                "operationId": "/Debug/GetPrimaryConnectionString",
                "tags": [
                    "Debug Mode"
                ],
                "responses": {
                    "200": {
                        "description": "Primary connection string from Azure KeyVault as reported in the Redux store.",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "string",
                                    "example": "mongodb://example-host:EcviJaGOBLpAQs9QZ6YsAimtp034fsoENvMLnXZkLRElPrIbio0ZIuhgRwLAhLpazIwt9BNJxsXPACDbFDDXZA==@example-host.mongo.cosmos.azure.com:10255/?ssl=true&replicaSet=globaldb&retrywrites=false&maxIdleTimeMS=120000&appName=@example-host@"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/Debug/SecondaryConnectionString": {
            "get": {
                "operationId": "/Debug/GetSecondaryConnectionString",
                "tags": [
                    "Debug Mode"
                ],
                "responses": {
                    "200": {
                        "description": "Secondary connection string from Azure KeyVault as reported in the Redux store.",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "string",
                                    "example": "mongodb://example-host:madp6dQfRpn0VVO1dw6qSsbYH799u9ydJQXz21DNxh5r5deVJWcjLReoH7b4dQK9zgjWIGhafYE7ACDbDDTBbQ==@example-host.mongo.cosmos.azure.com:10255/?ssl=true&replicaSet=globaldb&retrywrites=false&maxIdleTimeMS=120000&appName=@example-host@"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/Docs": {
            "get": {
                "operationId": "/Docs/GetSwaggerUi",
                "tags": [
                    "Debug Mode"
                ],
                "summary": "Render this Swagger UI",
                "description": "Runs the Swagger UI render to render the OpenAPI spec that you are viewing now.",
                "responses": {
                    "200": {
                        "description": "Returns the HTML for Swagger UI renderer's output"
                    }
                }
            }
        }
    },
    "components": {
        "schemas": {
            "UUIDv4": {
                "title": "GUID",
                "description": "A globally unique identifier.",
                "type": "string",
                "format": "uuid",
                "pattern": "^[0-9a-f]{8}-[0-9a-f]{4}-[0-5][0-9a-f]{3}-[089ab][0-9a-f]{3}-[0-9a-f]{12}$",
                "minLength": 36,
                "maxLength": 36,
                "example": "52fe49ff-7d5e-4509-a0e3-e2dd3f510de0"
            },
            "DateTime": {
                "title": "Date Time",
                "description": "RFC3339 format string representing a date and time.",
                "type": "string",
                "format": "date-time",
                "pattern": "^(?<CompleteMatch>(?:(?<DateMonthYear>\\d{4}-\\d{2}-\\d{2})T(?<Time>\\d{2}:\\d{2}:\\d{2}(?:\\.\\d+)?))(?<TimeZone>Z|[\\+-]\\d{2}:\\d{2})?)$",
                "example": "2023-01-28T13:25:00.00-05:00"
            },
            "TelemetryCollectionLevelList": {
                "title": "Telemetry Collection Level",
                "description": "Telemetry levels supported for data collection. The client has to specify which level of data is to be recorded.",
                "type": "string",
                "enum": [
                    "Low",
                    "Medium",
                    "High"
                ],
                "example": "Medium"
            },
            "ProductInfo": {
                "title": "Product Info",
                "description": "Structure describing the context of the product reporting its telemetry.",
                "type": "object",
                "required": [
                    "Name",
                    "Version"
                ],
                "properties": {
                    "Name": {
                        "title": "Name",
                        "description": "Name of the product that is having telemetry logged.\nWhen selected, this enables additional telemetry points that can be collected.\n - `MSM` = Moot Security Management.\n - `MTS` = Moot Telemetry Server.",
                        "type": "string",
                        "enum": [
                            "MSM",
                            "MTS"
                        ],
                        "example": "MSM"
                    },
                    "Version": {
                        "title": "Version",
                        "description": "Main version number of the product that the product is running.",
                        "type": "string",
                        "example": "2.3.0"
                    },
                    "Component": {
                        "title": "Component",
                        "description": "Internal component of the product that the info is for.",
                        "type": "string",
                        "example": "PSM"
                    },
                    "ComponentVersion": {
                        "title": "Version",
                        "description": "Version of the component that is being reported on.",
                        "type": "string",
                        "example": "2.3.0"
                    }
                }
            },
            "ErrorTelemetry": {
                "title": "Error Telemetry",
                "description": "Structure of the error data collected.",
                "type": "object",
                "required": [
                    "Type",
                    "Message",
                    "StackTrace"
                ],
                "properties": {
                    "Type": {
                        "title": "Type",
                        "description": "The type of error being reported.",
                        "type": "string",
                        "example": "Input Validation"
                    },
                    "Message": {
                        "title": "Message",
                        "description": "Context for the type of error being reported.",
                        "type": "string",
                        "example": "The device ID GUID specified is not valid!"
                    },
                    "StackTrace": {
                        "title": "Stack Trace",
                        "description": "Stack trace of the error message to help pinpoint the error in the code.",
                        "type": "string",
                        "example": "DeviceLifecycle -> DeviceLifecycleManagement -> newManagedDevice -> Input Validation"
                    }
                }
            },
            "RuntimeDataTelemetry": {
                "title": "Runtime Date Telemetry",
                "description": "Structure of the runtime data that is generated by the product.",
                "type": "object",
                "required": [
                    "RawData"
                ],
                "properties": {
                    "Header": {
                        "title": "Header",
                        "description": "Header of the debug information being recorded.",
                        "type": "string",
                        "example": "Completed retrieving a list of managed devices"
                    },
                    "RawData": {
                        "title": "Raw Data",
                        "description": "Raw data of the debug information being reported.",
                        "type": "string",
                        "example": "{\"CommissionedDate\":\"2021-08-28T11:09:58.311Z\",\"DisplayName\":\"PAW - 1912464979\",\"GroupAssignment\":\"355c3384-0da0-4669-a116-a4cf57f7a88d\",\"Id\":\"e77f482e-c8c1-4ac4-9c05-83795662e47d\",\"ParentGroup\":\"748f54f3-cd08-44e0-9f8c-18cd23e95960\",\"Type\":\"Privileged\",\"UserAssignment\":\"b57b3157-7298-4240-8267-7538e4da25d0\"}"
                    }
                }
            },
            "TelemetryInstance": {
                "title": "Telemetry Instance",
                "description": "Structure describing the base of the Telemetry Instance that will be provided by clients.",
                "type": "object",
                "required": [
                    "Product",
                    "TelemetryLevel",
                    "TenantId",
                    "TimeStamp",
                    "AddressList"
                ],
                "properties": {
                    "Product": {
                        "$ref": "#/components/schemas/ProductInfo"
                    },
                    "TelemetryLevel": {
                        "title": "Telemetry Level",
                        "description": "Telemetry levels supported for data collection. The client has to specify which level of data is to be recorded.",
                        "type": "string",
                        "enum": [
                            "Low",
                            "Medium",
                            "High"
                        ]
                    },
                    "TenantId": {
                        "$ref": "#/components/schemas/UUIDv4"
                    },
                    "TimeStamp": {
                        "$ref": "#/components/schemas/DateTime"
                    },
                    "AddressList": {
                        "title": "Address List",
                        "description": "List of street addresses to identify which CX is running the product.",
                        "type": "array",
                        "minItems": 1,
                        "items": {
                            "title": "Address",
                            "description": "Address representing the customer. This is usually gathered from the M365 billing data.",
                            "type": "string",
                            "example": "221B Baker Street, London NW1 6XE"
                        }
                    },
                    "Expiration": {
                        "$ref": "#/components/schemas/DateTime"
                    },
                    "Error": {
                        "$ref": "#/components/schemas/ErrorTelemetry"
                    },
                    "RuntimeData": {
                        "$ref": "#/components/schemas/RuntimeDataTelemetry"
                    }
                }
            },
            "MsmLowTelemetry": {
                "title": "MSM - Low Telemetry Mode",
                "description": "Structure describing the collected data for the MSM product's `Low` level of telemetry.",
                "type": "object",
                "required": [
                    "PrivilegedDeviceCount",
                    "PrivilegedUserCount",
                    "SpecializedDeviceCount",
                    "SpecializedUserCount",
                    "EnterpriseDeviceCount",
                    "EnterpriseUserCount"
                ],
                "allOf": [
                    {
                        "$ref": "#/components/schemas/TelemetryInstance"
                    }
                ],
                "properties": {
                    "PrivilegedDeviceCount": {
                        "title": "Privileged Device Count",
                        "description": "Count of Privileged Devices (PAW) that are deployed in the CX environment.",
                        "type": "number"
                    },
                    "PrivilegedUserCount": {
                        "title": "Privileged User Count",
                        "description": "Count of Privileged Users that are deployed in the CX environment.",
                        "type": "number"
                    },
                    "SpecializedDeviceCount": {
                        "title": "Specialized Device Count",
                        "description": "Count of Specialized Devices that are deployed in the CX environment.",
                        "type": "number"
                    },
                    "SpecializedUserCount": {
                        "title": "Specialized User Count",
                        "description": "Count of Specialized Users that are deployed in the CX environment.",
                        "type": "number"
                    },
                    "EnterpriseDeviceCount": {
                        "title": "Enterprise Device Count",
                        "description": "Count of Enterprise Devices that are deployed in the CX environment.",
                        "type": "number"
                    },
                    "EnterpriseUserCount": {
                        "title": "Enterprise User Count",
                        "description": "Count of Enterprise Users that are deployed in the CX environment.",
                        "type": "number"
                    }
                }
            },
            "MsmMediumTelemetry": {
                "title": "MSM - Medium Telemetry Mode",
                "description": "Structure describing the collected data for the MSM product's `Low` level of telemetry.",
                "type": "object",
                "required": [
                    "MonthlyActivePrivUsers",
                    "MonthlyActiveSpecUsers",
                    "MonthlyActiveEntUsers"
                ],
                "allOf": [
                    {
                        "$ref": "#/components/schemas/MsmLowTelemetry"
                    }
                ],
                "properties": {
                    "MonthlyActivePrivUsers": {
                        "title": "Monthly Active Privileged Users",
                        "description": "Number of active managed privileged users.",
                        "type": "number"
                    },
                    "MonthlyActiveSpecUsers": {
                        "title": "Monthly Active Specialized Users",
                        "description": "Number of active managed Specialized users.",
                        "type": "number"
                    },
                    "MonthlyActiveEntUsers": {
                        "title": "Monthly Active Enterprise Users",
                        "description": "Number of active managed Enterprise users.",
                        "type": "number"
                    }
                }
            }
        },
        "responses": {
            "404": {
                "description": "The requested object was not found."
            },
            "503": {
                "description": "App is starting still. Feature is not available. Please try again later."
            }
        },
        "parameters": {
            "TelemetryLevel": {
                "in": "query",
                "name": "level",
                "description": "The level of data collection that the incoming payload is representing.",
                "schema": {
                    "$ref": "#/components/schemas/TelemetryCollectionLevelList"
                }
            }
        }
    }
}