{
    "components": {
        "parameters": {
            "deviceId": {
                "description": "The SOP ID (Entra ID Device ID) of the managed device to target.",
                "in": "path",
                "name": "deviceId",
                "required": true,
                "schema": {
                    "example": "75da7fa4-4a04-44c8-8f2c-c1b2fa29aa51",
                    "format": "uuid",
                    "maxLength": 36,
                    "minLength": 36,
                    "pattern": "^[0-9a-f]{8}-[0-9a-f]{4}-[0-5][0-9a-f]{3}-[089ab][0-9a-f]{3}-[0-9a-f]{12}$",
                    "type": "string"
                }
            },
            "instanceId": {
                "description": "The Object ID of the parent group for the intermediary that you wish to target.",
                "in": "path",
                "name": "instanceId",
                "required": true,
                "schema": {
                    "example": "25d4d9da-28ea-42f8-b3df-23c3969abffa",
                    "format": "uuid",
                    "maxLength": 36,
                    "minLength": 36,
                    "pattern": "^[0-9a-f]{8}-[0-9a-f]{4}-[0-5][0-9a-f]{3}-[089ab][0-9a-f]{3}-[0-9a-f]{12}$",
                    "type": "string"
                }
            },
            "nextLink": {
                "description": "Skip token used ton continue with data paging. This token is generated by the MS Graph API and should not be generated by hand. Please only use tokens the server gives you. Please don't bring them from outside. The Graph API is picky.",
                "in": "query",
                "name": "nextLink",
                "schema": {
                    "example": "https://graph.microsoft.com/beta/devices?$top=20&$skiptoken=RFNwdCtEZXZpY2VfMThkNGY4OTAtMDA2YS00ZWM1LWI2OWYtY2VmNDY4ZjczNzQ4K0RldmljZV8xOGQ0Zjg5MC0wMDZhLTRlYzUtYjY5Zi1jZWY0NjhmNzM3NDg",
                    "format": "uri",
                    "minLength": 35,
                    "type": "string"
                }
            },
            "offeringId": {
                "description": "Unique identifier of the marketplace offering",
                "in": "path",
                "name": "offeringId",
                "required": true,
                "schema": {
                    "description": "Unique identifier of the marketplace offering.",
                    "example": "271ab834-7469-4f2d-a705-549972c4f325",
                    "format": "uuid",
                    "maxLength": 36,
                    "minLength": 36,
                    "pattern": "^[0-9a-f]{8}-[0-9a-f]{4}-[0-5][0-9a-f]{3}-[089ab][0-9a-f]{3}-[0-9a-f]{12}$",
                    "type": "string"
                }
            },
            "search": {
                "description": "Used in object filtering.",
                "in": "query",
                "name": "search",
                "schema": {
                    "example": "finance",
                    "type": "string"
                }
            },
            "securityClass": {
                "description": "The security class of managed object to retrieve. Unknown values, will be ignored. Please see https://learn.microsoft.com/en-us/security/compass/privileged-access-security-levels for a description of security levels.",
                "in": "path",
                "name": "securityClass",
                "required": true,
                "schema": {
                    "$ref": "#/components/schemas/SecurityClassList"
                }
            },
            "userId": {
                "description": "The SOP ID (Entra ID User's Object ID) of the managed user to target.",
                "in": "path",
                "name": "userId",
                "required": true,
                "schema": {
                    "example": "264a8bed-0714-48fd-8b9d-0e4c4715cee5",
                    "format": "uuid",
                    "maxLength": 36,
                    "minLength": 36,
                    "pattern": "^[0-9a-f]{8}-[0-9a-f]{4}-[0-5][0-9a-f]{3}-[089ab][0-9a-f]{3}-[0-9a-f]{12}$",
                    "type": "string"
                }
            }
        },
        "responses": {
            "401": {
                "description": "Principal is not authorized to access this endpoint. Check to make sure the Bearer token is valid and present!"
            },
            "404": {
                "description": "The requested object was not found."
            },
            "503": {
                "description": "App is starting still. Feature is not available. Please try again later."
            },
            "525": {
                "description": "Infrastructure not deployed. Please deploy the infrastructure before using this endpoint."
            }
        },
        "schemas": {
            "AccessToken": {
                "properties": {
                    "expiresOnTimestamp": {
                        "example": 1640975116000,
                        "type": "integer"
                    },
                    "token": {
                        "example": "eyJ0eXAiOiJKV1QiLCJhbGciOiJSUzI1NiIsIng1dCI6Imk2bEdrM0ZaenhSY1ViMkMzbkVRN3N5SEpsWSIsImtpZCI6Imk2bEdrM0ZaenhSY1ViMkMzbkVRN3N5SEpsWSJ9.eyJhdWQiOiJlZjFkYTlkNC1mZjc3LTRjM2UtYTAwNS04NDBjM2Y4MzA3NDUiLCJpc3MiOiJodHRwczovL3N0cy53aW5kb3dzLm5ldC9mYTE1ZDY5Mi1lOWM3LTQ0NjAtYTc0My0yOWYyOTUyMjIyOS8iLCJpYXQiOjE1MzcyMzMxMDYsIm5iZiI6MTUzNzIzMzEwNiwiZXhwIjoxNTM3MjM3MDA2LCJhY3IiOiIxIiwiYWlvIjoiQVhRQWkvOElBQUFBRm0rRS9RVEcrZ0ZuVnhMaldkdzhLKzYxQUdyU091TU1GNmViYU1qN1hPM0libUQzZkdtck95RCtOdlp5R24yVmFUL2tES1h3NE1JaHJnR1ZxNkJuOHdMWG9UMUxrSVorRnpRVmtKUFBMUU9WNEtjWHFTbENWUERTL0RpQ0RnRTIyMlRJbU12V05hRU1hVU9Uc0lHdlRRPT0iLCJhbXIiOlsid2lhIl0sImFwcGlkIjoiNzVkYmU3N2YtMTBhMy00ZTU5LTg1ZmQtOGMxMjc1NDRmMTdjIiwiYXBwaWRhY3IiOiIwIiwiZW1haWwiOiJBYmVMaUBtaWNyb3NvZnQuY29tIiwiZmFtaWx5X25hbWUiOiJMaW5jb2xuIiwiZ2l2ZW5fbmFtZSI6IkFiZSAoTVNGVCkiLCJpZHAiOiJodHRwczovL3N0cy53aW5kb3dzLm5ldC83MmY5ODhiZi04NmYxLTQxYWYtOTFhYi0yZDdjZDAxMjIyNDcvIiwiaXBhZGRyIjoiMjIyLjIyMi4yMjIuMjIiLCJuYW1lIjoiYWJlbGkiLCJvaWQiOiIwMjIyM2I2Yi1hYTFkLTQyZDQtOWVjMC0xYjJiYjkxOTQ0MzgiLCJyaCI6IkkiLCJzY3AiOiJ1c2VyX2ltcGVyc29uYXRpb24iLCJzdWIiOiJsM19yb0lTUVUyMjJiVUxTOXlpMmswWHBxcE9pTXo1SDNaQUNvMUdlWEEiLCJ0aWQiOiJmYTE1ZDY5Mi1lOWM3LTQ0NjAtYTc0My0yOWYyOTU2ZmQ0MjkiLCJ1bmlxdWVfbmFtZSI6ImFiZWxpQG1pY3Jvc29mdC5jb20iLCJ1dGkiOiJGVnNHeFlYSTMwLVR1aWt1dVVvRkFBIiwidmVyIjoiMS4wIn0.D3H6pMUtQnoJAGq6AHd",
                        "type": "string"
                    }
                },
                "type": "object"
            },
            "EnvironmentalVariables": {
                "additionalProperties": {
                    "type": "string"
                },
                "type": "object"
            },
            "Intermediary": {
                "description": "Base template for all intermediary objects to inherit from.",
                "properties": {
                    "id": {
                        "description": "Read-only.",
                        "example": "e097a3f5-9599-44a2-8923-fd3276c83ae1",
                        "format": "uuid",
                        "maxLength": 36,
                        "minLength": 36,
                        "pattern": "^[0-9a-f]{8}-[0-9a-f]{4}-[0-5][0-9a-f]{3}-[089ab][0-9a-f]{3}-[0-9a-f]{12}$",
                        "readOnly": true,
                        "type": "string"
                    },
                    "kind": {
                        "description": "Type of Intermediary that the properties are describing.",
                        "example": "AVD",
                        "type": "string"
                    },
                    "name": {
                        "description": "Human friendly name of the AVD cluster. This will be displayed to end users in the remote desktop app and web portals.",
                        "example": "Legacy Reach Back",
                        "maxLength": 42,
                        "minLength": 1,
                        "type": "string"
                    },
                    "type": {
                        "$ref": "#/components/schemas/SecurityClassList"
                    }
                },
                "required": [
                    "name"
                ],
                "title": "Intermediary - Base Type",
                "type": "object"
            },
            "Intermediary.AVD": {
                "properties": {
                    "addressRangeCIDR": {
                        "description": "Optional Virtual Network IP Address range, defaults to 10.0.0.0/16.",
                        "example": "172.16.1.0/24",
                        "type": "string"
                    },
                    "assignmentGroup": {
                        "description": "Read-only value that the server generates that is the Object ID of the user assignment security group for the current instance of the AVD intermediary.",
                        "example": "68873e26-3c35-465c-9422-0884a00beb36",
                        "format": "uuid",
                        "maxLength": 36,
                        "minLength": 36,
                        "pattern": "^[0-9a-f]{8}-[0-9a-f]{4}-[0-5][0-9a-f]{3}-[089ab][0-9a-f]{3}-[0-9a-f]{12}$",
                        "readOnly": true,
                        "type": "string"
                    },
                    "index": {
                        "description": "Used to uniquely name multiple session hosts in a single host pool.",
                        "minimum": 0,
                        "nullable": false,
                        "type": "number"
                    },
                    "location": {
                        "description": "Azure Regions that are available for the configured subscription. Resources will be deployed to the region specified here.",
                        "example": "East US 2",
                        "type": "string"
                    },
                    "resourceId": {
                        "description": "ID of the Host Pool. This is generated by the server and can't be set, hence the read only flag.",
                        "example": "/subscriptions/742f0d26-daa0-4f84-8d4f-fb052f89f639/resourceGroups/SOP_-_PSM-Legacy_Reach_Back/providers/Microsoft.DesktopVirtualization/hostpools/SOP_-_PSM-Cluster-Legacy_Reach_Back",
                        "minLength": 122,
                        "readOnly": true,
                        "type": "string"
                    },
                    "sessionHostGroup": {
                        "description": "Read-only value that the server generates that is the Object ID of the session host security group for the current instance of the AVD intermediary.",
                        "example": "f99f0918-da9b-4c58-9a8d-9346abc5d9ec",
                        "format": "uuid",
                        "maxLength": 36,
                        "minLength": 36,
                        "pattern": "^[0-9a-f]{8}-[0-9a-f]{4}-[0-5][0-9a-f]{3}-[089ab][0-9a-f]{3}-[0-9a-f]{12}$",
                        "readOnly": true,
                        "type": "string"
                    },
                    "sessionHostPrefix": {
                        "description": "Short name to append to the beginning of the session host VMs. The max computer name length is 15, 4 chars are reserved for indexing and 4 for prefixing.",
                        "example": "Reach",
                        "maxLength": 7,
                        "minLength": 1,
                        "type": "string"
                    },
                    "vmSku": {
                        "description": "SKU ID in Azure of the VM session host set that is to be deployed.",
                        "example": "Standard_D2s_v5",
                        "type": "string"
                    }
                },
                "required": [
                    "index",
                    "location",
                    "sessionHostPrefix",
                    "vmSku"
                ],
                "title": "Intermediary - Azure Virtual Desktop",
                "type": "object"
            },
            "ManagedDevice": {
                "description": "A computed device object. This is generated by combining multiple pieces of metadata.",
                "properties": {
                    "commissionedDate": {
                        "description": "This is the ISO 8601 string format of the time representing the commission date of the PAW.",
                        "example": "2023-02-04T05:06:09.601Z",
                        "format": "date-time",
                        "type": "string"
                    },
                    "displayName": {
                        "description": "Current computer name of the device according to Entra ID. Empty string indicates that the device has not joined Entra ID yet",
                        "example": "Priv-01534962354",
                        "maxLength": 15,
                        "minLength": 0,
                        "type": "string"
                    },
                    "groupAssignment": {
                        "description": "This is the ID of the Custom CSP Device Configuration that configures the local admin and local hyper-v group memberships.",
                        "example": "830d8b6f-2f6f-41f7-8800-0c07445abd36",
                        "pattern": "^[0-9a-f]{8}-[0-9a-f]{4}-[0-5][0-9a-f]{3}-[089ab][0-9a-f]{3}-[0-9a-f]{12}$",
                        "type": "string"
                    },
                    "id": {
                        "description": "Read-only.",
                        "example": "9f237e13-9a04-4daf-b3d4-6d2beec3c2bf",
                        "format": "uuid",
                        "maxLength": 36,
                        "minLength": 36,
                        "pattern": "^[0-9a-f]{8}-[0-9a-f]{4}-[0-5][0-9a-f]{3}-[089ab][0-9a-f]{3}-[0-9a-f]{12}$",
                        "readOnly": true,
                        "type": "string"
                    },
                    "parentDevice": {
                        "description": "DeviceID of the parent PAW device.",
                        "example": "81682cf5-0405-491d-8ab8-e07c778d7eaf",
                        "nullable": true,
                        "pattern": "^[0-9a-f]{8}-[0-9a-f]{4}-[0-5][0-9a-f]{3}-[089ab][0-9a-f]{3}-[0-9a-f]{12}$",
                        "type": "string"
                    },
                    "type": {
                        "$ref": "#/components/schemas/SecurityClassList"
                    },
                    "uniqueGroup": {
                        "description": "The object ID of the unique security group that contains the managed Entra ID Device Identity.",
                        "example": "146964e0-8ca4-4af0-9c2a-894b32912463",
                        "pattern": "^[0-9a-f]{8}-[0-9a-f]{4}-[0-5][0-9a-f]{3}-[089ab][0-9a-f]{3}-[0-9a-f]{12}$",
                        "readOnly": true,
                        "type": "string"
                    },
                    "userAssignment": {
                        "description": "The ID of the Settings Catalog that contains the user rights assignment of the specified PAW device.",
                        "example": "146964e0-8ca4-4af0-9c2a-894b32912463",
                        "pattern": "^[0-9a-f]{8}-[0-9a-f]{4}-[0-5][0-9a-f]{3}-[089ab][0-9a-f]{3}-[0-9a-f]{12}$",
                        "readOnly": true,
                        "type": "string"
                    }
                },
                "required": [
                    "id",
                    "uniqueGroup",
                    "type",
                    "displayName",
                    "commissionedDate",
                    "uniqueGroup"
                ],
                "title": "Managed Device Object",
                "type": "object"
            },
            "ManagedUser": {
                "description": "A user object that has limited properties. The user object is generated by combining multiple pieces of metadata from Entra ID and SOP.",
                "properties": {
                    "creationDate": {
                        "description": "A date object representing when the user managed by SOP.",
                        "example": "2023-10-21T15:24:47.970Z",
                        "format": "date-time",
                        "readOnly": true,
                        "type": "string"
                    },
                    "displayName": {
                        "description": "The name shown on UIs for the privileged user according to Entra ID.",
                        "example": "Example User (Priv)",
                        "maxLength": 256,
                        "nullable": true,
                        "type": "string"
                    },
                    "firstName": {
                        "description": "Given name of the privileged user according to Entra ID.",
                        "maxLength": 64,
                        "nullable": true,
                        "type": "string"
                    },
                    "generatedPassword": {
                        "description": "The password that was created for the managed user upon managed user creation, this is not stored. This is only available once during user creation. If the password is lost, reset the PWD in Entra ID or have the user perform SSPR.",
                        "example": "GY_w7bZUKRgpIXctD0S2wg",
                        "readOnly": true,
                        "type": "string"
                    },
                    "id": {
                        "description": "Read-only.",
                        "example": "9f237e13-9a04-4daf-b3d4-6d2beec3c2bf",
                        "format": "uuid",
                        "maxLength": 36,
                        "minLength": 36,
                        "pattern": "^[0-9a-f]{8}-[0-9a-f]{4}-[0-5][0-9a-f]{3}-[089ab][0-9a-f]{3}-[0-9a-f]{12}$",
                        "readOnly": true,
                        "type": "string"
                    },
                    "lastName": {
                        "description": "Surname/family name of the privileged user according to Entra ID.",
                        "maxLength": 64,
                        "nullable": true,
                        "type": "string"
                    },
                    "parentId": {
                        "description": "The Entra ID Object ID of the object that the manged user is tied to. This value is only present on privileged users.",
                        "example": "e59a3a64-dc36-4368-80ec-c205eb176ef6",
                        "format": "uuid",
                        "maxLength": 36,
                        "minLength": 36,
                        "pattern": "^[0-9a-f]{8}-[0-9a-f]{4}-[0-5][0-9a-f]{3}-[089ab][0-9a-f]{3}-[0-9a-f]{12}$",
                        "readOnly": true,
                        "type": "string"
                    },
                    "type": {
                        "$ref": "#/components/schemas/SecurityClassList"
                    },
                    "uiEducation": {
                        "description": "Indicates if user education is enabled in the UI for the specified user. True is on, false is off.",
                        "example": false,
                        "type": "boolean"
                    },
                    "uniqueGroup": {
                        "description": "ObjectID of the unique user group that the managed user is a member of.",
                        "example": "ad402c42-1bc9-4ba5-9419-7dbfb46a9c4d",
                        "format": "uuid",
                        "pattern": "^[0-9a-f]{8}-[0-9a-f]{4}-[0-5][0-9a-f]{3}-[089ab][0-9a-f]{3}-[0-9a-f]{12}$",
                        "readOnly": true,
                        "type": "string"
                    },
                    "upn": {
                        "description": "User principal name of the user object according to Azure Active Directory.",
                        "example": "priv-user@example.com",
                        "format": "email",
                        "maxLength": 113,
                        "minLength": 6,
                        "type": "string"
                    }
                },
                "required": [
                    "id",
                    "upn",
                    "type",
                    "creationDate",
                    "uniqueGroup"
                ],
                "title": "Managed User Object",
                "type": "object"
            },
            "ObjectPage.Intermediary.AVD": {
                "properties": {
                    "@odata.count": {
                        "nullable": true,
                        "type": "number"
                    },
                    "@odata.nextLink": {
                        "nullable": true,
                        "type": "string"
                    },
                    "value": {
                        "items": {
                            "allOf": [
                                {
                                    "$ref": "#/components/schemas/Intermediary"
                                },
                                {
                                    "properties": {
                                        "properties": {
                                            "$ref": "#/components/schemas/Intermediary.AVD"
                                        }
                                    },
                                    "type": "object"
                                }
                            ]
                        },
                        "minItems": 0,
                        "type": "array"
                    }
                },
                "required": [
                    "value"
                ],
                "title": "Page of AVD Intermediary Objects",
                "type": "object"
            },
            "ObjectPage.ManagedDevice": {
                "properties": {
                    "@odata.count": {
                        "nullable": true,
                        "type": "number"
                    },
                    "@odata.nextLink": {
                        "nullable": true,
                        "type": "string"
                    },
                    "value": {
                        "items": {
                            "$ref": "#/components/schemas/ManagedDevice"
                        },
                        "minItems": 0,
                        "type": "array"
                    }
                },
                "required": [
                    "value"
                ],
                "title": "Page of Managed Device Objects",
                "type": "object"
            },
            "ObjectPage.ManagedUser": {
                "properties": {
                    "@odata.count": {
                        "nullable": true,
                        "type": "number"
                    },
                    "@odata.nextLink": {
                        "nullable": true,
                        "type": "string"
                    },
                    "value": {
                        "items": {
                            "$ref": "#/components/schemas/ManagedUser"
                        },
                        "minItems": 0,
                        "type": "array"
                    }
                },
                "required": [
                    "value"
                ],
                "title": "Page of Managed User Objects",
                "type": "object"
            },
            "PrincipalAuthContext": {
                "description": "Data is retrieved from the Express session, if you expect up to date principal info, check the MS Graph API for `/Me`. This should only be used for non-critical uses, like displaying the currently logged in principal.",
                "properties": {
                    "environment": {
                        "description": "The cloud type that issued the access token",
                        "enum": [
                            "login.windows.net",
                            "login.live.com"
                        ],
                        "example": "login.windows.net",
                        "type": "string"
                    },
                    "homeAccountId": {
                        "description": "The Object ID of the user joined with a period with the tenant ID of the user.",
                        "example": "45966282-24d3-41a0-afa1-4a5ca1395e2e.f5009b32-5ff2-4fa6-a037-2393678cc0b4",
                        "maxLength": 73,
                        "minLength": 73,
                        "type": "string"
                    },
                    "idTokenClaims": {
                        "properties": {
                            "aud": {
                                "description": "The audience of the authentication context. This should match the client ID of the client authentication app registration for the server and should be rejected if it doesn't.",
                                "example": "68873d7a-a058-4a3b-80e9-50a303ff7324",
                                "format": "uuid",
                                "maxLength": 36,
                                "minLength": 36,
                                "type": "string"
                            },
                            "exp": {
                                "description": "Expires At: The unix timestamp of the access token when the access token becomes invalid. For this app, the value should be one hour greater than `nbf`. Multiple by `1000` and pass to the `Date` class to get a JS compatible time stamp.",
                                "example": 1668660299,
                                "type": "number"
                            },
                            "iat": {
                                "description": "Issued At: The unix timestamp the access token was generated. Multiple by `1000` and pass to the `Date` class to get a JS compatible time stamp.",
                                "example": 1668656399,
                                "type": "number"
                            },
                            "iss": {
                                "description": "The issuer of the token, this is the value of the STS service in Entra ID that issued the token.",
                                "example": "https://login.microsoftonline.com/f5009b32-5ff2-4fa6-a037-2393678cc0b4/v2.0",
                                "format": "uri",
                                "type": "string"
                            },
                            "name": {
                                "description": "The display name of the current principal context.",
                                "example": "Joe Smith (Privileged)",
                                "type": "string"
                            },
                            "nbf": {
                                "description": "Not Before: The unix timestamp of the access token when the access token becomes valid. This is frequently the same value as `iat`. Multiple by `1000` and pass to the `Date` class to get a JS compatible time stamp.",
                                "example": 1668656399,
                                "type": "number"
                            },
                            "oid": {
                                "description": "The object ID of the user account relative to the tenant that is hosting the user authentication.",
                                "example": "45966282-24d3-41a0-afa1-4a5ca1395e2e",
                                "format": "uuid",
                                "maxLength": 36,
                                "minLength": 36,
                                "type": "string"
                            },
                            "preferred_username": {
                                "description": "The primary username that represents the user. It could be an email address, phone number, or a generic username without a specified format. Its value is mutable and might change over time. Since it is mutable, this value must not be used to make authorization decisions. The profile scope is required in order to receive this claim.",
                                "example": "user@example.com",
                                "type": "string"
                            },
                            "rh": {
                                "description": "An Entra ID internal claim for token revalidation. Please ignore this and don't use it.",
                                "example": "I",
                                "type": "string"
                            },
                            "sub": {
                                "description": "An app specific unique identifier for a user, this identifier is only valid for this app.",
                                "example": "hPgXwBjePEie648BFBVdAA",
                                "type": "string"
                            },
                            "tid": {
                                "description": "The GUID of the tenant that the authentication takes place in",
                                "example": "f5009b32-5ff2-4fa6-a037-2393678cc0b4",
                                "format": "uuid",
                                "maxItems": 36,
                                "minItems": 36,
                                "type": "string"
                            },
                            "uti": {
                                "description": "An claim used internally to Microsoft for token revalidation, should be ignored.",
                                "example": "hPgXwBjePEie648BFBVdAA",
                                "readOnly": true,
                                "type": "string"
                            },
                            "ver": {
                                "description": "The version of the access token retrieved. This value should only ever be 2.0 unless a newer version comes out.",
                                "enum": [
                                    "2.0"
                                ],
                                "type": "string"
                            }
                        },
                        "type": "object"
                    },
                    "localAccountId": {
                        "description": "The object ID of the user account relative to the tenant that is hosting the user authentication.",
                        "example": "45966282-24d3-41a0-afa1-4a5ca1395e2e",
                        "format": "uuid",
                        "maxLength": 36,
                        "minLength": 36,
                        "type": "string"
                    },
                    "name": {
                        "description": "The display name of the user that is authenticated.",
                        "example": "Joe Smith (Privileged)",
                        "type": "string"
                    },
                    "tenantId": {
                        "description": "The GUID of the tenant that the authentication takes place in",
                        "example": "f5009b32-5ff2-4fa6-a037-2393678cc0b4",
                        "format": "uuid",
                        "maxLength": 36,
                        "minLength": 36,
                        "type": "string"
                    },
                    "username": {
                        "description": "The user principal name or the SMTP address of the logged in user (whichever was used to authenticate).",
                        "example": "user@example.com",
                        "format": "email",
                        "type": "string"
                    }
                },
                "title": "Authentication Context for Entra ID",
                "type": "object"
            },
            "roleScopeTag": {
                "properties": {
                    "@odata.type": {
                        "default": "#microsoft.graph.roleScopeTag",
                        "description": "The type indicator for the MS Graph API to consume.",
                        "enum": [
                            "#microsoft.graph.roleScopeTag"
                        ],
                        "example": "#microsoft.graph.roleScopeTag",
                        "readOnly": true,
                        "type": "string"
                    },
                    "description": {
                        "description": "Description of the Role Scope Tag.",
                        "example": "PAWSecGrp=9ed1e179-e179-9ed1-79e1-d19e79e1d19e\nUsrSecGrp=9ed1e179-e179-9ed1-79e1-d19e79e1d19e\nSiloRootGrp=9ed1e179-e179-9ed1-79e1-d19e79e1d19e\nBrkGls=9ed1e179-e179-9ed1-79e1-d19e79e1d19e\nUsrTag=9ed1e179-e179-9ed1-79e1-d19e79e1d19e",
                        "type": "string"
                    },
                    "displayName": {
                        "description": "The display or friendly name of the Role Scope Tag.",
                        "example": "Privileged-Security-Management",
                        "type": "string"
                    },
                    "id": {
                        "description": "A unique number representing the unique Role Scope tag object. This is an integer as a string. Key of the entity. This is automatically generated.",
                        "example": "3",
                        "readOnly": true,
                        "type": "string"
                    },
                    "isBuiltIn": {
                        "description": "This field is used to notate Microsoft managed Role Scope tags, e.g. the \"default\" tag.",
                        "example": false,
                        "readOnly": true,
                        "type": "boolean"
                    }
                },
                "title": "Graph API - Role Scope Tag",
                "type": "object"
            },
            "SecurityClassList": {
                "description": "Security class types as described in https://learn.microsoft.com/en-us/security/compass/privileged-access-security-levels.",
                "enum": [
                    "Privileged",
                    "Specialized",
                    "Enterprise",
                    "Unmanaged"
                ],
                "example": "Privileged",
                "title": "Type of security class the object(s) belongs to",
                "type": "string"
            }
        },
        "securitySchemes": {
            "EntraID": {
                "type": "http",
                "scheme": "bearer",
                "bearerFormat": "JWT",
                "description": "The Access Token from Entra ID for the App ID of `ID HERE`."
            }
        }
    },
    "externalDocs": {
        "description": "Official Documentation",
        "url": "https://docs.shilab.com"
    },
    "info": {
        "contact": {
            "email": "elliot_huffman@shi.com",
            "name": "SHI - Lab"
        },
        "description": "Deprive your threats of practical significance. Deploy the Securing Privilege Access architecture. All in a few seconds.",
        "title": "SHI Orchestration Platform",
        "version": "appVersionFromConfigEngine"
    },
    "openapi": "3.1.0",
    "paths": {
        "/API/Infrastructure/Deploy": {
            "get": {
                "description": "Has the core infrastructure engine check if the config engine can initialize properly.",
                "operationId": "/API/Infrastructure/GetDeploy",
                "responses": {
                    "200": {
                        "content": {
                            "application/json": {
                                "examples": {
                                    "infra deployed": {
                                        "description": "All API calls should be available since the core infrastructure is deployed.",
                                        "summary": "Infrastructure is deployed",
                                        "value": true
                                    },
                                    "Infra not deployed": {
                                        "description": "Infrastructure is not deployed. Please run the deployment before attempting different API calls.",
                                        "summary": "Infrastructure is not deployed",
                                        "value": false
                                    }
                                },
                                "schema": {
                                    "type": "boolean"
                                }
                            }
                        },
                        "description": "OK"
                    },
                    "401": {
                        "$ref": "#/components/responses/401"
                    },
                    "503": {
                        "$ref": "#/components/responses/503"
                    }
                },
                "summary": "Get the current status of the infrastructure deployment",
                "tags": [
                    "Infrastructure Deployment"
                ]
            },
            "post": {
                "description": "After the user consents, deploy the core security groups, scope tag, configurations and metadata.",
                "operationId": "/API/Infrastructure/PostDeploy",
                "requestBody": {
                    "content": {
                        "application/json": {
                            "examples": {
                                "Ignorant Deploy Request": {
                                    "description": "Clueless dev trying to automate this application without reading the docs. RTFM!",
                                    "summary": "Ignorant Deploy Request",
                                    "value": {}
                                },
                                "No User Consent": {
                                    "description": "User did not agree to the terms and conditions. This post should not have been sent.",
                                    "summary": "User Did Not Consent",
                                    "value": {
                                        "deploymentConsent": false
                                    }
                                },
                                "User Consented": {
                                    "description": "User agreed to the terms and conditions and pressed the deploy button.",
                                    "summary": "User Consented",
                                    "value": {
                                        "deploymentConsent": true
                                    }
                                }
                            },
                            "schema": {
                                "properties": {
                                    "deploymentConsent": {
                                        "type": "boolean"
                                    }
                                },
                                "type": "object"
                            }
                        }
                    }
                },
                "responses": {
                    "204": {
                        "content": {
                            "application/json": {
                                "examples": {
                                    "Successful Deployment": {
                                        "description": "When a deployment request is successfully executed, a boolean true is returned.",
                                        "summary": "Successful Deployment",
                                        "value": true
                                    }
                                },
                                "schema": {
                                    "type": "boolean"
                                }
                            }
                        },
                        "description": "OK"
                    },
                    "401": {
                        "$ref": "#/components/responses/401"
                    }
                },
                "summary": "Deploy the core infrastructure architecture specification",
                "tags": [
                    "Infrastructure Deployment"
                ]
            }
        },
        "/API/Infrastructure/Version": {
            "get": {
                "description": "Gets the version of the API server and the architecture version deployed as well as the supported version of the architecture spec from the server.",
                "operationId": "/API/Infrastructure/GetVersion",
                "responses": {
                    "200": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "apiVersion": {
                                            "description": "Follows symantec versioning as laid out here: https://semver.org/. This number is the version of the API server.",
                                            "example": "1.2.3",
                                            "type": "string"
                                        },
                                        "archSpecVersion": {
                                            "description": "An incrementing number that describes the version of the architecture specification that the API supports.",
                                            "example": 123,
                                            "type": "number"
                                        },
                                        "deployedArchVersion": {
                                            "description": "The version of the architecture specification that is currently deployed.",
                                            "example": 25,
                                            "type": "number"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        },
                        "description": "OK"
                    },
                    "401": {
                        "$ref": "#/components/responses/401"
                    },
                    "503": {
                        "$ref": "#/components/responses/503"
                    }
                },
                "summary": "Gets the version of SOPs components",
                "tags": [
                    "Infrastructure Deployment"
                ]
            }
        },
        "/API/Intermediary/Type/{securityClass}/Offering/8a921026-ec06-4e08-af19-8812e161e61f/Instance/": {
            "get": {
                "description": "Retrieves a list of all AVD intermediaries for the specified security class filter. Next links may be provided for pagination to allow for good performance on larger environments. If a nextLink is return, not all data was returned on this query and the next link can be sent back to the API to get the next page of data.",
                "operationId": "/API/Intermediary/AVD/GetAll",
                "parameters": [
                    {
                        "$ref": "#/components/parameters/securityClass"
                    },
                    {
                        "$ref": "#/components/parameters/nextLink"
                    },
                    {
                        "$ref": "#/components/parameters/search"
                    }
                ],
                "responses": {
                    "200": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ObjectPage.Intermediary.AVD"
                                }
                            }
                        },
                        "description": "OK"
                    },
                    "401": {
                        "$ref": "#/components/responses/401"
                    },
                    "503": {
                        "$ref": "#/components/responses/503"
                    },
                    "525": {
                        "$ref": "#/components/responses/525"
                    }
                },
                "summary": "Retrieves all AVD Intermediary Instances",
                "tags": [
                    "Intermediary"
                ]
            }
        },
        "/API/Intermediary/Type/{securityClass}/Offering/8a921026-ec06-4e08-af19-8812e161e61f/Instance/{instanceId}": {
            "delete": {
                "description": "Deletes the specified intermediary (by the parent group's Entra ID Object ID) using the requested security class as a filter.",
                "operationId": "/API/Intermediary/AVD/DeleteInstance",
                "parameters": [
                    {
                        "$ref": "#/components/parameters/securityClass"
                    },
                    {
                        "$ref": "#/components/parameters/instanceId"
                    }
                ],
                "responses": {
                    "204": {
                        "description": "OK: Deleted successfully"
                    },
                    "401": {
                        "$ref": "#/components/responses/401"
                    },
                    "404": {
                        "$ref": "#/components/responses/404"
                    },
                    "503": {
                        "$ref": "#/components/responses/503"
                    },
                    "525": {
                        "$ref": "#/components/responses/525"
                    }
                },
                "summary": "Deletes a Single AVD Intermediary Instance",
                "tags": [
                    "Intermediary"
                ]
            },
            "get": {
                "description": "Retrieves the specified intermediary (by the parent group's Entra ID Object ID) using the requested security class as a filter.",
                "operationId": "/API/Intermediary/AVD/GetInstance",
                "parameters": [
                    {
                        "$ref": "#/components/parameters/securityClass"
                    },
                    {
                        "$ref": "#/components/parameters/instanceId"
                    }
                ],
                "responses": {
                    "200": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ObjectPage.Intermediary.AVD"
                                }
                            }
                        },
                        "description": "OK"
                    },
                    "401": {
                        "$ref": "#/components/responses/401"
                    },
                    "404": {
                        "$ref": "#/components/responses/404"
                    },
                    "503": {
                        "$ref": "#/components/responses/503"
                    },
                    "525": {
                        "$ref": "#/components/responses/525"
                    }
                },
                "summary": "Retrieves a Single AVD Intermediary Instance",
                "tags": [
                    "Intermediary"
                ]
            }
        },
        "/API/Intermediary/Type/{securityClass}/Offering/8a921026-ec06-4e08-af19-8812e161e61f/Instance/{instanceId}/Assign": {
            "delete": {
                "description": "Removes the specified user(s) as identified by their Object ID from the AVD cluster and deletes their corresponding session host(s).",
                "operationId": "/API/Intermediary/AVD/Instance/RemoveAssign",
                "parameters": [
                    {
                        "$ref": "#/components/parameters/securityClass"
                    },
                    {
                        "$ref": "#/components/parameters/instanceId"
                    }
                ],
                "requestBody": {
                    "content": {
                        "application/json": {
                            "examples": {
                                "One user": {
                                    "description": "Removes 1 session host, and removed the requested user from the assignments security group.",
                                    "summary": "Remove Single User",
                                    "value": "{\"userList\": [\"cf5b12a9-b939-4d5c-a380-fb62e4fe88ef\"]}"
                                },
                                "Two users": {
                                    "description": "Removes 3 session hosts, and removed the requested users from the assignments security group.",
                                    "summary": "Remove Multiple Users",
                                    "value": "{\"userList\": [\"0c56b055-9042-4f54-8e6e-6510e12a81dc\",\"dd27937c-6287-45b3-98de-387725b068f3\",\"989d3dc1-43f4-4ff7-82ba-43661f94a428\"]}"
                                }
                            },
                            "schema": {
                                "properties": {
                                    "userList": {
                                        "items": {
                                            "format": "uuid",
                                            "pattern": "^[0-9a-f]{8}-[0-9a-f]{4}-[0-5][0-9a-f]{3}-[089ab][0-9a-f]{3}-[0-9a-f]{12}$",
                                            "type": "string"
                                        },
                                        "type": "array"
                                    }
                                },
                                "type": "object"
                            }
                        }
                    }
                },
                "responses": {
                    "204": {
                        "description": "OK: Deleted successfully"
                    },
                    "401": {
                        "$ref": "#/components/responses/401"
                    },
                    "404": {
                        "$ref": "#/components/responses/404"
                    },
                    "503": {
                        "$ref": "#/components/responses/503"
                    },
                    "525": {
                        "$ref": "#/components/responses/525"
                    }
                },
                "summary": "Removes the assignment of the specified users",
                "tags": [
                    "Intermediary"
                ]
            },
            "get": {
                "description": "Gets the list of assigned user from the specified AVD Intermediary.",
                "operationId": "/API/Intermediary/AVD/Instance/GetAssign",
                "parameters": [
                    {
                        "$ref": "#/components/parameters/securityClass"
                    },
                    {
                        "$ref": "#/components/parameters/instanceId"
                    },
                    {
                        "$ref": "#/components/parameters/nextLink"
                    }
                ],
                "responses": {
                    "200": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "items": {
                                        "$ref": "#/components/schemas/ManagedUser"
                                    },
                                    "maxItems": 1,
                                    "minItems": 0,
                                    "type": "array"
                                }
                            }
                        },
                        "description": "OK"
                    },
                    "401": {
                        "$ref": "#/components/responses/401"
                    },
                    "404": {
                        "$ref": "#/components/responses/404"
                    },
                    "503": {
                        "$ref": "#/components/responses/503"
                    },
                    "525": {
                        "$ref": "#/components/responses/525"
                    }
                },
                "summary": "List all assigned users (paginated)",
                "tags": [
                    "Intermediary"
                ]
            },
            "post": {
                "description": "Assigns the specified user(s) as identified by their Object ID to the AVD cluster and create corresponding session host(s) for them.",
                "operationId": "/API/Intermediary/AVD/Instance/Assign",
                "parameters": [
                    {
                        "$ref": "#/components/parameters/securityClass"
                    },
                    {
                        "$ref": "#/components/parameters/instanceId"
                    }
                ],
                "requestBody": {
                    "content": {
                        "application/json": {
                            "examples": {
                                "One user": {
                                    "description": "Creates 1 session host, and added the requested user to the assignments security group.",
                                    "summary": "Assign Single User",
                                    "value": "{\"userList\": [\"cf5b12a9-b939-4d5c-a380-fb62e4fe88ef\"]}"
                                },
                                "Two users": {
                                    "description": "Creates 3 session hosts, and added the requested users to the assignments security group.",
                                    "summary": "Assign Multiple Users",
                                    "value": "{\"userList\": [\"0c56b055-9042-4f54-8e6e-6510e12a81dc\",\"dd27937c-6287-45b3-98de-387725b068f3\",\"989d3dc1-43f4-4ff7-82ba-43661f94a428\"]}"
                                }
                            },
                            "schema": {
                                "properties": {
                                    "userList": {
                                        "items": {
                                            "format": "uuid",
                                            "pattern": "^[0-9a-f]{8}-[0-9a-f]{4}-[0-5][0-9a-f]{3}-[089ab][0-9a-f]{3}-[0-9a-f]{12}$",
                                            "type": "string"
                                        },
                                        "type": "array"
                                    }
                                },
                                "type": "object"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "items": {
                                        "$ref": "#/components/schemas/ManagedUser"
                                    },
                                    "minItems": 0,
                                    "type": "array"
                                }
                            }
                        },
                        "description": "OK"
                    },
                    "401": {
                        "$ref": "#/components/responses/401"
                    },
                    "404": {
                        "$ref": "#/components/responses/404"
                    },
                    "503": {
                        "$ref": "#/components/responses/503"
                    },
                    "525": {
                        "$ref": "#/components/responses/525"
                    }
                },
                "summary": "Assigns the list of specified users",
                "tags": [
                    "Intermediary"
                ]
            }
        },
        "/API/Intermediary/Type/{securityClass}/Offering/8a921026-ec06-4e08-af19-8812e161e61f/Instance/{instanceId}/Assign/{userId}": {
            "get": {
                "description": "Get the specified managed user's from the specified AVD intermediary assignment list.",
                "operationId": "/API/Intermediary/AVD/Instance/GetSpecificAssign",
                "parameters": [
                    {
                        "$ref": "#/components/parameters/securityClass"
                    },
                    {
                        "$ref": "#/components/parameters/instanceId"
                    },
                    {
                        "$ref": "#/components/parameters/userId"
                    }
                ],
                "responses": {
                    "200": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "items": {
                                        "$ref": "#/components/schemas/ManagedUser"
                                    },
                                    "minItems": 0,
                                    "type": "array"
                                }
                            }
                        },
                        "description": "OK"
                    },
                    "401": {
                        "$ref": "#/components/responses/401"
                    },
                    "404": {
                        "$ref": "#/components/responses/404"
                    },
                    "503": {
                        "$ref": "#/components/responses/503"
                    },
                    "525": {
                        "$ref": "#/components/responses/525"
                    }
                },
                "summary": "Get a specific assigned user",
                "tags": [
                    "Intermediary"
                ]
            }
        },
        "/API/Lifecycle/Type/Privileged/Device/{deviceId}/Assign": {
            "delete": {
                "description": "Remove the specified user list from the device.",
                "operationId": "/API/lifecycle/DeleteDeviceAssignment",
                "parameters": [
                    {
                        "$ref": "#/components/parameters/deviceId"
                    }
                ],
                "requestBody": {
                    "content": {
                        "application/json": {
                            "examples": {
                                "Multiple Users": {
                                    "description": "Remove multiple user assignments from a managed device.",
                                    "summary": "Unassign multiple users",
                                    "value": "{\"userList\": [\"0674276a-31e8-4773-8ed9-6fb49dbd0fa8\",\"66714224-b1a6-4fd6-b9d8-5263fdf755fc\"]}"
                                },
                                "Single User": {
                                    "description": "Remove a single user assignment from a managed device.",
                                    "summary": "Unassign one user",
                                    "value": "{\"userList\": [\"01ebf268-cf28-4607-954a-261dfd480453\"]}"
                                }
                            },
                            "schema": {
                                "properties": {
                                    "userList": {
                                        "items": {
                                            "example": "d1bc9d1a-5a30-4d66-898a-1dd300e707bc",
                                            "format": "uuid",
                                            "pattern": "^[0-9a-f]{8}-[0-9a-f]{4}-[0-5][0-9a-f]{3}-[089ab][0-9a-f]{3}-[0-9a-f]{12}$",
                                            "type": "string"
                                        },
                                        "type": "array"
                                    }
                                },
                                "type": "object"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "items": {
                                        "$ref": "#/components/schemas/ManagedUser"
                                    },
                                    "minItems": 0,
                                    "type": "array"
                                }
                            }
                        },
                        "description": "OK"
                    },
                    "401": {
                        "$ref": "#/components/responses/401"
                    },
                    "503": {
                        "$ref": "#/components/responses/503"
                    },
                    "525": {
                        "$ref": "#/components/responses/525"
                    }
                },
                "summary": "Remove User Assignments",
                "tags": [
                    "Device Management"
                ]
            },
            "get": {
                "description": "Lists all of the users that are currently assigned to the specified device.",
                "operationId": "/API/lifecycle/GetDeviceAssignment",
                "parameters": [
                    {
                        "$ref": "#/components/parameters/deviceId"
                    }
                ],
                "responses": {
                    "200": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "items": {
                                        "$ref": "#/components/schemas/ManagedUser"
                                    },
                                    "minItems": 0,
                                    "type": "array"
                                }
                            }
                        },
                        "description": "OK"
                    },
                    "401": {
                        "$ref": "#/components/responses/401"
                    },
                    "503": {
                        "$ref": "#/components/responses/503"
                    },
                    "525": {
                        "$ref": "#/components/responses/525"
                    }
                },
                "summary": "List User Assignments",
                "tags": [
                    "Device Management"
                ]
            },
            "post": {
                "description": "Adds the specified list of users to the list of users that are allowed to log in on the specific privileged device.",
                "operationId": "/API/lifecycle/ReplaceDeviceAssignment",
                "parameters": [
                    {
                        "$ref": "#/components/parameters/deviceId"
                    }
                ],
                "requestBody": {
                    "content": {
                        "application/json": {
                            "examples": {
                                "1:1 map": {
                                    "description": "This example is the security best practice of having only one user mapped to a managed device.",
                                    "summary": "1:1 User Mapping",
                                    "value": "{\"userList\": [\"user@contoso.com\"]}"
                                },
                                "Multi-User Managed Device": {
                                    "description": "This example is the security best practice of having only one user mapped to a managed device.",
                                    "summary": "Multi-User Assignment",
                                    "value": "{\"userList\": [\"user@contoso.com\",\"anotherUser@contoso.com\"]}"
                                }
                            },
                            "schema": {
                                "properties": {
                                    "userList": {
                                        "items": {
                                            "example": "d1bc9d1a-5a30-4d66-898a-1dd300e707bc",
                                            "format": "uuid",
                                            "pattern": "^[0-9a-f]{8}-[0-9a-f]{4}-[0-5][0-9a-f]{3}-[089ab][0-9a-f]{3}-[0-9a-f]{12}$",
                                            "type": "string"
                                        },
                                        "type": "array"
                                    }
                                },
                                "type": "object"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "items": {
                                        "$ref": "#/components/schemas/ManagedUser"
                                    },
                                    "minItems": 0,
                                    "type": "array"
                                }
                            }
                        },
                        "description": "OK"
                    },
                    "401": {
                        "$ref": "#/components/responses/401"
                    },
                    "503": {
                        "$ref": "#/components/responses/503"
                    },
                    "525": {
                        "$ref": "#/components/responses/525"
                    }
                },
                "summary": "Add User Assignments",
                "tags": [
                    "Device Management"
                ]
            }
        },
        "/API/Lifecycle/Type/{securityClass}/Device": {
            "get": {
                "description": "Returns a list of all commissioned devices managed by the SHI Orchestration Platform app.",
                "operationId": "/API/lifecycle/GetDeviceList",
                "parameters": [
                    {
                        "$ref": "#/components/parameters/securityClass"
                    },
                    {
                        "$ref": "#/components/parameters/nextLink"
                    },
                    {
                        "$ref": "#/components/parameters/search"
                    }
                ],
                "responses": {
                    "200": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ObjectPage.ManagedDevice"
                                }
                            }
                        },
                        "description": "OK"
                    },
                    "401": {
                        "$ref": "#/components/responses/401"
                    },
                    "503": {
                        "$ref": "#/components/responses/503"
                    },
                    "525": {
                        "$ref": "#/components/responses/525"
                    }
                },
                "summary": "Get a list of all managed devices",
                "tags": [
                    "Device Management"
                ]
            },
            "post": {
                "description": "Commissions a new device, into the device hierarchy and appends appropriate metadata and initial policies. Appends required metadata to proper locations.",
                "operationId": "/API/lifecycle/CreateDevice",
                "parameters": [
                    {
                        "$ref": "#/components/parameters/securityClass"
                    }
                ],
                "requestBody": {
                    "content": {
                        "application/json": {
                            "example": "{\"deviceId\":\"f7e1a66f-ce2e-4351-83df-2776813ef95d\"}",
                            "schema": {
                                "properties": {
                                    "deviceId": {
                                        "$ref": "#/components/parameters/deviceId"
                                    }
                                },
                                "required": [
                                    "deviceId"
                                ],
                                "type": "object"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ManagedDevice"
                                }
                            }
                        },
                        "description": "OK"
                    },
                    "401": {
                        "$ref": "#/components/responses/401"
                    },
                    "404": {
                        "$ref": "#/components/responses/404"
                    },
                    "503": {
                        "$ref": "#/components/responses/503"
                    },
                    "525": {
                        "$ref": "#/components/responses/525"
                    }
                },
                "summary": "Commission a new device.",
                "tags": [
                    "Device Management"
                ]
            }
        },
        "/API/Lifecycle/Type/{securityClass}/Device/{deviceId}": {
            "delete": {
                "description": "Removes the device from the management hierarchy, removes metadata tagging and issues the wipe command to the devices.",
                "operationId": "/API/lifecycle/DeleteDevice",
                "parameters": [
                    {
                        "$ref": "#/components/parameters/securityClass"
                    },
                    {
                        "$ref": "#/components/parameters/deviceId"
                    }
                ],
                "responses": {
                    "204": {
                        "description": "OK: Deleted successfully"
                    },
                    "401": {
                        "$ref": "#/components/responses/401"
                    },
                    "404": {
                        "$ref": "#/components/responses/404"
                    },
                    "503": {
                        "$ref": "#/components/responses/503"
                    },
                    "525": {
                        "$ref": "#/components/responses/525"
                    }
                },
                "summary": "Decommission specified device.",
                "tags": [
                    "Device Management"
                ]
            },
            "get": {
                "description": "Get the specified managed device by its Entra ID Device ID.",
                "operationId": "/API/lifecycle/GetDevice",
                "parameters": [
                    {
                        "$ref": "#/components/parameters/securityClass"
                    },
                    {
                        "$ref": "#/components/parameters/deviceId"
                    }
                ],
                "responses": {
                    "200": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ManagedDevice"
                                }
                            }
                        },
                        "description": "OK"
                    },
                    "401": {
                        "$ref": "#/components/responses/401"
                    },
                    "404": {
                        "$ref": "#/components/responses/404"
                    },
                    "503": {
                        "$ref": "#/components/responses/503"
                    },
                    "525": {
                        "$ref": "#/components/responses/525"
                    }
                },
                "summary": "Get the specified device by its ID",
                "tags": [
                    "Device Management"
                ]
            }
        },
        "/API/Lifecycle/Type/{securityClass}/User": {
            "get": {
                "description": "Returns a list of all users managed by the SHI Orchestration Platform app.",
                "operationId": "/API/Lifecycle/GetUserList",
                "parameters": [
                    {
                        "$ref": "#/components/parameters/securityClass"
                    },
                    {
                        "$ref": "#/components/parameters/nextLink"
                    },
                    {
                        "$ref": "#/components/parameters/search"
                    }
                ],
                "responses": {
                    "200": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ObjectPage.ManagedUser"
                                }
                            }
                        },
                        "description": "OK"
                    },
                    "401": {
                        "$ref": "#/components/responses/401"
                    },
                    "503": {
                        "$ref": "#/components/responses/503"
                    },
                    "525": {
                        "$ref": "#/components/responses/525"
                    }
                },
                "summary": "Get a list of all managed users.",
                "tags": [
                    "User Management"
                ]
            },
            "post": {
                "description": "Securely clones the specified user's properties into a new managed user object.",
                "operationId": "/API/lifecycle/CreateUser",
                "parameters": [
                    {
                        "$ref": "#/components/parameters/securityClass"
                    }
                ],
                "requestBody": {
                    "content": {
                        "application/json": {
                            "example": "{\"userId\":\"d886680d-a283-4fc2-803f-370d81d62366\"}",
                            "schema": {
                                "properties": {
                                    "userId": {
                                        "description": "The Entra ID object ID of the user to clone.",
                                        "example": "264a8bed-0714-48fd-8b9d-0e4c4715cee5",
                                        "format": "uuid",
                                        "maxLength": 36,
                                        "minLength": 36,
                                        "pattern": "^[0-9a-f]{8}-[0-9a-f]{4}-[0-5][0-9a-f]{3}-[089ab][0-9a-f]{3}-[0-9a-f]{12}$",
                                        "type": "string"
                                    }
                                },
                                "required": [
                                    "userId"
                                ],
                                "type": "object"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ManagedUser"
                                }
                            }
                        },
                        "description": "OK"
                    },
                    "401": {
                        "$ref": "#/components/responses/401"
                    },
                    "404": {
                        "$ref": "#/components/responses/404"
                    },
                    "409": {
                        "description": "User is already managed."
                    },
                    "503": {
                        "$ref": "#/components/responses/503"
                    },
                    "525": {
                        "$ref": "#/components/responses/525"
                    }
                },
                "summary": "Create a new managed user with the based on the user ID specified.",
                "tags": [
                    "User Management"
                ]
            }
        },
        "/API/Lifecycle/Type/{securityClass}/User/{userId}": {
            "delete": {
                "description": "Deletes the user account and removes the management artifacts.",
                "operationId": "/API/lifecycle/DeleteUser",
                "parameters": [
                    {
                        "$ref": "#/components/parameters/securityClass"
                    },
                    {
                        "$ref": "#/components/parameters/userId"
                    }
                ],
                "responses": {
                    "204": {
                        "description": "OK: Deleted successfully"
                    },
                    "401": {
                        "$ref": "#/components/responses/401"
                    },
                    "404": {
                        "$ref": "#/components/responses/404"
                    },
                    "503": {
                        "$ref": "#/components/responses/503"
                    },
                    "525": {
                        "$ref": "#/components/responses/525"
                    }
                },
                "summary": "Delete the specified managed user.",
                "tags": [
                    "User Management"
                ]
            },
            "get": {
                "description": "Retrieves the specified managed user by its Entra ID User ID",
                "operationId": "/API/lifecycle/GetUser",
                "parameters": [
                    {
                        "$ref": "#/components/parameters/securityClass"
                    },
                    {
                        "$ref": "#/components/parameters/userId"
                    }
                ],
                "responses": {
                    "200": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ManagedUser"
                                }
                            }
                        },
                        "description": "OK"
                    },
                    "401": {
                        "$ref": "#/components/responses/401"
                    },
                    "404": {
                        "$ref": "#/components/responses/404"
                    },
                    "503": {
                        "$ref": "#/components/responses/503"
                    },
                    "525": {
                        "$ref": "#/components/responses/525"
                    }
                },
                "summary": "Gets the specified managed user",
                "tags": [
                    "User Management"
                ]
            },
            "patch": {
                "description": "Updates the user's mutable data such as their display name, uiEducation or first/last name. All other properties passed will be ignored.",
                "operationId": "/API/lifecycle/UpdateUser",
                "parameters": [
                    {
                        "$ref": "#/components/parameters/securityClass"
                    },
                    {
                        "$ref": "#/components/parameters/userId"
                    }
                ],
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/ManagedUser"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ManagedUser"
                                }
                            }
                        },
                        "description": "OK"
                    },
                    "401": {
                        "$ref": "#/components/responses/401"
                    },
                    "404": {
                        "$ref": "#/components/responses/404"
                    },
                    "503": {
                        "$ref": "#/components/responses/503"
                    },
                    "525": {
                        "$ref": "#/components/responses/525"
                    }
                },
                "summary": "Update a managed user with the specified data.",
                "tags": [
                    "User Management"
                ]
            }
        },
        "/API/Marketplace/": {
            "get": {
                "description": "Lists all of the available marketplace offerings along with their metadata.",
                "operationId": "/API/Marketplace/Offering/ListAll",
                "responses": {
                    "401": {
                        "$ref": "#/components/responses/401"
                    },
                    "503": {
                        "$ref": "#/components/responses/503"
                    },
                    "525": {
                        "$ref": "#/components/responses/525"
                    }
                },
                "summary": "List All Available Offerings",
                "tags": [
                    "Marketplace"
                ]
            }
        },
        "/API/Marketplace/Type/{securityClass}/Offering/{offeringId}": {
            "post": {
                "description": "Creates the offering with the requested settings. In the body payload, the `type` property in the `property` object is ignored. See the AVD example.",
                "operationId": "/API/Marketplace/Offering/Create",
                "parameters": [
                    {
                        "$ref": "#/components/parameters/securityClass"
                    },
                    {
                        "$ref": "#/components/parameters/offeringId"
                    }
                ],
                "requestBody": {
                    "content": {
                        "application/json": {
                            "examples": {
                                "Azure Bastion": {
                                    "description": "Coming Soon!",
                                    "summary": "Azure Bastion",
                                    "value": "Coming soon!"
                                },
                                "Azure Virtual Desktop": {
                                    "description": "Deploys an AVD cluster that is connected to the device configurations system in SOP. The type property can be omitted because it is passed via path parameter.",
                                    "summary": "Azure Virtual Desktop",
                                    "value": "{\n  \"name\": \"Legacy Reach Back\",\n  \"properties\": {\n    \"addressRangeCIDR\": \"172.16.1.0/24\",\n    \"index\": 0,\n    \"location\": \"East US 2\",\n    \"sessionHostPrefix\": \"Reach\",\n    \"vmSku\": \"Standard_D2s_v5\"\n  }\n}"
                                }
                            },
                            "schema": {
                                "allOf": [
                                    {
                                        "$ref": "#/components/schemas/Intermediary"
                                    },
                                    {
                                        "properties": {
                                            "properties": {
                                                "$ref": "#/components/schemas/Intermediary.AVD"
                                            }
                                        },
                                        "type": "object"
                                    }
                                ]
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Intermediary.AVD"
                                }
                            }
                        },
                        "description": "OK"
                    },
                    "401": {
                        "$ref": "#/components/responses/401"
                    },
                    "404": {
                        "$ref": "#/components/responses/404"
                    },
                    "503": {
                        "$ref": "#/components/responses/503"
                    },
                    "525": {
                        "$ref": "#/components/responses/525"
                    }
                },
                "summary": "Deploy a Marketplace Offering",
                "tags": [
                    "Marketplace"
                ]
            }
        },
        "/Docs": {
            "get": {
                "description": "Runs the Swagger UI render to render the OpenAPI spec that you are viewing now.",
                "operationId": "/Docs/GetSwaggerUi",
                "responses": {
                    "200": {
                        "description": "Returns the HTML for Swagger UI renderer's output"
                    }
                },
                "summary": "Render this Swagger UI",
                "tags": [
                    "Debug Mode"
                ]
            }
        }
    },
    "security": [
        {
            "EntraID": []
        }
    ],
    "servers": [
        {
            "description": "A secured connection to the app, only secured connections should be used for production.",
            "url": "https://contoso.local:443/"
        },
        {
            "description": "Used only for local dev, never host this app without network encryption.",
            "url": "http://contoso.local:80/"
        }
    ],
    "tags": [
        {
            "description": "Used to manage the user session and authentication state.",
            "name": "App Authentication"
        },
        {
            "description": "Device lifecycle management.",
            "name": "Device Management"
        },
        {
            "description": "User lifecycle management.",
            "name": "User Management"
        },
        {
            "description": "Manages the lifecycle of the various intermediary system types.",
            "name": "Intermediary"
        },
        {
            "description": "Metadata and deployment management for market offerings. Lifecycle management is not handled in this route.",
            "name": "Marketplace"
        },
        {
            "description": "Checks the status and starts deployment of the core infrastructure.",
            "name": "Infrastructure Deployment"
        },
        {
            "description": "Endpoints that are exposed only in debug mode. You can use these to see as the app sees.",
            "name": "Debug Mode"
        }
    ]
}
