{
    "components": {
        "parameters": {
            "deviceId": {
                "description": "The SOP ID (Entra ID Device ID) of the managed device to target.",
                "in": "path",
                "name": "deviceId",
                "required": true,
                "schema": {
                    "example": "75da7fa4-4a04-44c8-8f2c-c1b2fa29aa51",
                    "format": "uuid",
                    "maxLength": 36,
                    "minLength": 36,
                    "pattern": "^[0-9a-f]{8}-[0-9a-f]{4}-[0-5][0-9a-f]{3}-[089ab][0-9a-f]{3}-[0-9a-f]{12}$",
                    "type": "string"
                }
            },
            "instanceId": {
                "description": "The Object ID of the parent group for the intermediary that you wish to target.",
                "in": "path",
                "name": "instanceId",
                "required": true,
                "schema": {
                    "example": "25d4d9da-28ea-42f8-b3df-23c3969abffa",
                    "format": "uuid",
                    "maxLength": 36,
                    "minLength": 36,
                    "pattern": "^[0-9a-f]{8}-[0-9a-f]{4}-[0-5][0-9a-f]{3}-[089ab][0-9a-f]{3}-[0-9a-f]{12}$",
                    "type": "string"
                }
            },
            "nextLink": {
                "description": "Skip token used ton continue with data paging. This token is generated by the MS Graph API and should not be generated by hand. Please only use tokens the server gives you. Please don't bring them from outside. The Graph API is picky.",
                "in": "query",
                "name": "nextLink",
                "schema": {
                    "example": "https://graph.microsoft.com/beta/devices?$top=20&$skiptoken=RFNwdCtEZXZpY2VfMThkNGY4OTAtMDA2YS00ZWM1LWI2OWYtY2VmNDY4ZjczNzQ4K0RldmljZV8xOGQ0Zjg5MC0wMDZhLTRlYzUtYjY5Zi1jZWY0NjhmNzM3NDg",
                    "format": "uri",
                    "minLength": 35,
                    "type": "string"
                }
            },
            "offeringId": {
                "description": "Unique identifier of the marketplace offering",
                "in": "path",
                "name": "offeringId",
                "required": true,
                "schema": {
                    "description": "Unique identifier of the marketplace offering.",
                    "example": "271ab834-7469-4f2d-a705-549972c4f325",
                    "format": "uuid",
                    "maxLength": 36,
                    "minLength": 36,
                    "pattern": "^[0-9a-f]{8}-[0-9a-f]{4}-[0-5][0-9a-f]{3}-[089ab][0-9a-f]{3}-[0-9a-f]{12}$",
                    "type": "string"
                }
            },
            "search": {
                "description": "Used in object filtering.",
                "in": "query",
                "name": "search",
                "schema": {
                    "example": "finance",
                    "type": "string"
                }
            },
            "securityClass": {
                "description": "The security class of managed object to retrieve. Unknown values, will be ignored. Please see https://learn.microsoft.com/en-us/security/compass/privileged-access-security-levels for a description of security levels.",
                "in": "path",
                "name": "securityClass",
                "required": true,
                "schema": {
                    "$ref": "#/components/schemas/SecurityClassList"
                }
            },
            "userId": {
                "description": "The SOP ID (Entra ID User's Object ID) of the managed user to target.",
                "in": "path",
                "name": "userId",
                "required": true,
                "schema": {
                    "example": "264a8bed-0714-48fd-8b9d-0e4c4715cee5",
                    "format": "uuid",
                    "maxLength": 36,
                    "minLength": 36,
                    "pattern": "^[0-9a-f]{8}-[0-9a-f]{4}-[0-5][0-9a-f]{3}-[089ab][0-9a-f]{3}-[0-9a-f]{12}$",
                    "type": "string"
                }
            }
        },
        "responses": {
            "201": {
                "description": "The authorization was recorded successfully."
            },
            "202": {
                "description": "The process to create a report has started."
            },
            "401": {
                "description": "Principal is not authorized to access this endpoint. Check to make sure the Bearer token is valid and present!"
            },
            "404": {
                "description": "The requested object was not found."
            },
            "409": {
                "description": "A job is already in progress."
            },
            "525": {
                "description": "Infrastructure not deployed. Please deploy the infrastructure before using this endpoint."
            }
        },
        "schemas": {
            "Core.SystemRequirements": {
                "title": "Core - System Requirements",
                "description": "Collection of indicators that notify the caller if the system requirements have been met for various sub components to operate.",
                "properties": {
                    "AzurePermissions": {
                        "description": "Flag that indicates if the required Azure RBAC assignment(s) are present or not.",
                        "type": "boolean",
                        "example": true
                    },
                    "DefendEntitlement": {
                        "description": "Flag that indicates if the required defend licenses are present or not.",
                        "type": "boolean",
                        "example": false
                    },
                    "DiscoverEntitlement": {
                        "description": "Flag that indicates if the required discover licenses are present or not.",
                        "type": "boolean",
                        "example": true
                    },
                    "EntraPermissions": {
                        "description": "Flag that indicates if the required Entra ID Role assignment(s) are present or not.",
                        "type": "boolean",
                        "example": true
                    },
                    "ServicePlans": {
                        "description": "Flag that indicates if the required M365 licenses are present or not.",
                        "type": "boolean",
                        "example": false
                    }
                },
                "type": "object",
                "required": [
                    "AzurePermissions",
                    "DefendEntitlement",
                    "DiscoverEntitlement",
                    "EntraPermissions",
                    "ServicePlans"
                ]
            },
            "Shield.Authenticator.Status": {
                "title": "Authentication - Status",
                "description": "List of credentials that are being waited for by SHIELD's internal authentication engine.",
                "properties": {
                    "accessToken": {
                        "oneOf": [
                            {
                                "description": "Flag that represents if the server is not waiting for a specific access token.",
                                "type": "boolean",
                                "example": false
                            },
                            {
                                "$ref": "#/components/schemas/Shield.Authenticator.Status.TokenAudience"
                            }
                        ]
                    },
                    "sccAuth": {
                        "description": "Flag that represents if the server is waiting for SCC Auth credentials.",
                        "type": "boolean",
                        "example": true
                    }
                },
                "type": "object",
                "required": [
                    "accessToken",
                    "sccAuth"
                ]
            },
            "Shield.Authenticator.Status.TokenAudience": {
                "title": "SHIELD - Authenticator - Status - Token Audience",
                "description": "If a access token is being requested, this is the audience that the access token should have when being submitted.",
                "properties": {
                    "audience": {
                        "description": "Audience ID of the access token that is being requested.",
                        "type": "string",
                        "format": "uuid",
                        "example": "00000002-0000-0000-c000-000000000000"
                    }
                },
                "type": "object",
                "required": [
                    "audience"
                ]
            },
            "Shield.Authenticator.Container.Credentials": {
                "title": "SHIELD - Authenticator - SCC Auth",
                "description": "SHIELD - Defender, and Purview portal Container Credentials",
                "type": "object",
                "properties": {
                    "authenticatedUpn": {
                        "description": "User principal name of the user that authenticated to the portals.",
                        "example": "user@example.com",
                        "type": "string",
                        "format": "email"
                    },
                    "expiration": {
                        "description": "Point in time at which the whole authentication structure has an expired state and is un-useable.",
                        "example": "2024-09-26T18:16:29.340Z",
                        "type": "string",
                        "format": "date-time"
                    },
                    "security": {
                        "$ref": "#/components/schemas/Shield.Authenticator.Container.Credentials.SccAuth"
                    },
                    "compliance": {
                        "$ref": "#/components/schemas/Shield.Authenticator.Container.Credentials.SccAuth"
                    },
                    "purview": {
                        "$ref": "#/components/schemas/Shield.Authenticator.Container.Credentials.SccAuth"
                    }
                },
                "required": [
                    "authenticatedUpn",
                    "security",
                    "compliance",
                    "purview"
                ]
            },
            "Shield.Authenticator.Container.Credentials.SccAuth": {
                "title": "SHIELD - Authenticator - SCC Auth - Credential Container",
                "description": "Container for the credentials for a single SccAuth authenticated site.",
                "properties": {
                    "sccAuth": {
                        "description": "Authentication Token.",
                        "example": "54BKPtTL-eSMFp5cqYTMMSblm2U80cUJqQgmbe4f_sRn4ammMmU1NKNurn9HqpsUtS4FrMJRTKa3Or_pFbedM_57R0fVBfNJ-m2Pvey9OweWIDradzT0dB1WnufPTJiT2y7zSQy91Y9wJIn1_aY5q-MNh75qwjM84Dng-mYzbd9KqUfyPUolOo-j-... (Truncated)",
                        "type": "string"
                    },
                    "xsrf": {
                        "description": "Cross Site Request Forgery Prevention Token.",
                        "example": "PEDwTvWdm2qSTe-n8h-1praK4OcQK1ELTJ08DWYqBRzQiyA2MIuEKEMNLu4ExjDNpAOUnAxmsqOeuGzb82MJYkegOE6hW8BzpSM6k9nbTbJ4yjNGzMSQvWUnyqrBvGa8JfSRiSeaKdXGBnxGd90Spw2:... (truncated)",
                        "type": "string"
                    }
                },
                "required": [
                    "sccAuth",
                    "xsrf"
                ],
                "type": "object"
            },
            "Shield.Discover.Status": {
                "title": "Discover - Status",
                "description": "Detailed status that indicates the current state of the Discover engine and its progress.",
                "type": "object",
                "properties": {
                    "running": {
                        "description": "Flag that indicates if another run is already in progress or not.",
                        "type": "boolean",
                        "example": true
                    }
                },
                "required": [
                    "running"
                ]
            },
            "Intermediary": {
                "description": "Base template for all intermediary objects to inherit from.",
                "properties": {
                    "id": {
                        "description": "Read-only.",
                        "example": "e097a3f5-9599-44a2-8923-fd3276c83ae1",
                        "format": "uuid",
                        "maxLength": 36,
                        "minLength": 36,
                        "pattern": "^[0-9a-f]{8}-[0-9a-f]{4}-[0-5][0-9a-f]{3}-[089ab][0-9a-f]{3}-[0-9a-f]{12}$",
                        "readOnly": true,
                        "type": "string"
                    },
                    "kind": {
                        "description": "Type of Intermediary that the properties are describing.",
                        "example": "AVD",
                        "type": "string"
                    },
                    "name": {
                        "description": "Human friendly name of the AVD cluster. This will be displayed to end users in the remote desktop app and web portals.",
                        "example": "Legacy Reach Back",
                        "maxLength": 42,
                        "minLength": 1,
                        "type": "string"
                    },
                    "securityClass": {
                        "$ref": "#/components/schemas/SecurityClassList"
                    }
                },
                "required": [
                    "name"
                ],
                "title": "Intermediary - Base Type",
                "type": "object"
            },
            "Intermediary.AVD": {
                "properties": {
                    "addressRangeCIDR": {
                        "description": "Optional Virtual Network IP Address range, defaults to 10.0.0.0/16.",
                        "example": "172.16.1.0/24",
                        "type": "string"
                    },
                    "assignmentGroup": {
                        "description": "Read-only value that the server generates that is the Object ID of the user assignment security group for the current instance of the AVD intermediary.",
                        "example": "68873e26-3c35-465c-9422-0884a00beb36",
                        "format": "uuid",
                        "maxLength": 36,
                        "minLength": 36,
                        "pattern": "^[0-9a-f]{8}-[0-9a-f]{4}-[0-5][0-9a-f]{3}-[089ab][0-9a-f]{3}-[0-9a-f]{12}$",
                        "readOnly": true,
                        "type": "string"
                    },
                    "index": {
                        "description": "Used to uniquely name multiple session hosts in a single host pool.",
                        "minimum": 0,
                        "nullable": false,
                        "type": "number"
                    },
                    "location": {
                        "description": "Azure Regions that are available for the configured subscription. Resources will be deployed to the region specified here.",
                        "example": "East US 2",
                        "type": "string"
                    },
                    "resourceId": {
                        "description": "ID of the Host Pool. This is generated by the server and can't be set, hence the read only flag.",
                        "example": "/subscriptions/742f0d26-daa0-4f84-8d4f-fb052f89f639/resourceGroups/SOP_-_PSM-Legacy_Reach_Back/providers/Microsoft.DesktopVirtualization/hostpools/SOP_-_PSM-Cluster-Legacy_Reach_Back",
                        "minLength": 122,
                        "readOnly": true,
                        "type": "string"
                    },
                    "sessionHostGroup": {
                        "description": "Read-only value that the server generates that is the Object ID of the session host security group for the current instance of the AVD intermediary.",
                        "example": "f99f0918-da9b-4c58-9a8d-9346abc5d9ec",
                        "format": "uuid",
                        "maxLength": 36,
                        "minLength": 36,
                        "pattern": "^[0-9a-f]{8}-[0-9a-f]{4}-[0-5][0-9a-f]{3}-[089ab][0-9a-f]{3}-[0-9a-f]{12}$",
                        "readOnly": true,
                        "type": "string"
                    },
                    "sessionHostPrefix": {
                        "description": "Short name to append to the beginning of the session host VMs. The max computer name length is 15, 4 chars are reserved for indexing and 4 for prefixing.",
                        "example": "Reach",
                        "maxLength": 7,
                        "minLength": 1,
                        "type": "string"
                    },
                    "vmSku": {
                        "description": "SKU ID in Azure of the VM session host set that is to be deployed.",
                        "example": "Standard_D2s_v5",
                        "type": "string"
                    }
                },
                "required": [
                    "index",
                    "location",
                    "sessionHostPrefix",
                    "vmSku"
                ],
                "title": "Intermediary - Azure Virtual Desktop",
                "type": "object"
            },
            "ManagedDevice": {
                "title": "Managed Device",
                "description": "Structure that represents a all of the states a managed device could be in.",
                "type": "object",
                "properties": {
                    "commissionedDate": {
                        "description": "This is the ISO 8601 string format of the time representing the commission date of the PAW.",
                        "example": "2023-02-04T05:06:09.601Z",
                        "format": "date-time",
                        "type": "string"
                    },
                    "displayName": {
                        "description": "Current computer name of the device according to Entra ID. Empty string indicates that the device has not joined Entra ID yet.",
                        "example": "Priv-01534962354",
                        "maxLength": 15,
                        "minLength": 0,
                        "type": "string"
                    },
                    "id": {
                        "description": "Entra ID Device ID (Not Object ID) of the specified device.",
                        "example": "9f237e13-9a04-4daf-b3d4-6d2beec3c2bf",
                        "format": "uuid",
                        "maxLength": 36,
                        "minLength": 36,
                        "pattern": "^[0-9a-f]{8}-[0-9a-f]{4}-[0-5][0-9a-f]{3}-[089ab][0-9a-f]{3}-[0-9a-f]{12}$",
                        "readOnly": true,
                        "type": "string"
                    },
                    "parentDeviceId": {
                        "description": "DeviceID of the parent PAW device.",
                        "example": "81682cf5-0405-491d-8ab8-e07c778d7eaf",
                        "nullable": true,
                        "pattern": "^[0-9a-f]{8}-[0-9a-f]{4}-[0-5][0-9a-f]{3}-[089ab][0-9a-f]{3}-[0-9a-f]{12}$",
                        "type": "string"
                    },
                    "securityClass": {
                        "$ref": "#/components/schemas/SecurityClassList"
                    },
                    "uniqueGroupId": {
                        "description": "The object ID of the unique security group that contains the managed Entra ID Device Identity.",
                        "example": "146964e0-8ca4-4af0-9c2a-894b32912463",
                        "pattern": "^[0-9a-f]{8}-[0-9a-f]{4}-[0-5][0-9a-f]{3}-[089ab][0-9a-f]{3}-[0-9a-f]{12}$",
                        "readOnly": true,
                        "type": "string"
                    }
                },
                "required": [
                    "commissionedDate",
                    "displayName",
                    "id",
                    "securityClass",
                    "uniqueGroupId"
                ]
            },
            "ManagedDevice.Privileged": {
                "description": "Set of properties that are available on privileged managed device objects only.",
                "title": "Managed Device - Privileged",
                "type": "object",
                "allOf": [
                    {
                        "$ref": "#/components/schemas/ManagedDevice"
                    },
                    {
                        "type": "object",
                        "properties": {
                            "groupAssignmentId": {
                                "description": "This is the ID of the Custom CSP Device Configuration that configures the local admin and local hyper-v group memberships.",
                                "example": "830d8b6f-2f6f-41f7-8800-0c07445abd36",
                                "pattern": "^[0-9a-f]{8}-[0-9a-f]{4}-[0-5][0-9a-f]{3}-[089ab][0-9a-f]{3}-[0-9a-f]{12}$",
                                "type": "string"
                            },
                            "securityClass": {
                                "description": "Security class that indicates this device is a privileged device.",
                                "example": "Privileged",
                                "type": "string",
                                "enum": [
                                    "Privileged"
                                ]
                            },
                            "userAssignmentId": {
                                "description": "The ID of the Settings Catalog that contains the user rights assignment of the specified PAW device.",
                                "example": "146964e0-8ca4-4af0-9c2a-894b32912463",
                                "pattern": "^[0-9a-f]{8}-[0-9a-f]{4}-[0-5][0-9a-f]{3}-[089ab][0-9a-f]{3}-[0-9a-f]{12}$",
                                "readOnly": true,
                                "type": "string"
                            },
                            "userAssignmentList": {
                                "description": "List of Object IDs for the privileged user accounts that are assigned to this device.",
                                "example": [
                                    "56d0d4e1-96f6-4cfb-a5e9-a4ee923169a8",
                                    "94a9d681-a8d2-43eb-a83b-d4bfe90259ff",
                                    "c54d4854-9254-4689-8a22-1cc80a3dae4e"
                                ],
                                "type": "array",
                                "items": {
                                    "type": "string",
                                    "format": "uuid"
                                }
                            }
                        },
                        "required": [
                            "groupAssignmentId",
                            "securityClass",
                            "userAssignmentId",
                            "userAssignmentList"
                        ]
                    }
                ]
            },
            "ManagedUser": {
                "title": "Managed User",
                "description": "A user object that has limited properties. The user object is generated by combining multiple pieces of metadata from Entra ID and SOP.",
                "properties": {
                    "creationDate": {
                        "description": "A date object representing when the user managed by SOP.",
                        "example": "2023-10-21T15:24:47.970Z",
                        "format": "date-time",
                        "readOnly": true,
                        "type": "string"
                    },
                    "displayName": {
                        "description": "The name shown on UIs for the privileged user according to Entra ID.",
                        "example": "Example User (Priv)",
                        "maxLength": 256,
                        "nullable": true,
                        "type": "string"
                    },
                    "firstName": {
                        "description": "Given name of the privileged user according to Entra ID.",
                        "maxLength": 64,
                        "nullable": true,
                        "type": "string"
                    },
                    "id": {
                        "description": "The Entra ID Object ID of the managed user. This is the one property that is stored in the settings engine. This is the key in the storage systems to uniquely separate the managed user's data from others.",
                        "example": "9f237e13-9a04-4daf-b3d4-6d2beec3c2bf",
                        "format": "uuid",
                        "maxLength": 36,
                        "minLength": 36,
                        "pattern": "^[0-9a-f]{8}-[0-9a-f]{4}-[0-5][0-9a-f]{3}-[089ab][0-9a-f]{3}-[0-9a-f]{12}$",
                        "readOnly": true,
                        "type": "string"
                    },
                    "lastName": {
                        "description": "Surname/family name of the privileged user according to Entra ID.",
                        "maxLength": 64,
                        "nullable": true,
                        "type": "string"
                    },
                    "upn": {
                        "description": "User principal name of the user object according to Azure Active Directory.",
                        "example": "priv-user@example.com",
                        "format": "email",
                        "maxLength": 113,
                        "minLength": 6,
                        "type": "string"
                    },
                    "securityClass": {
                        "$ref": "#/components/schemas/SecurityClassList"
                    },
                    "uiEducation": {
                        "description": "Indicates if user education is enabled in the UI for the specified user. True is on, false is off.",
                        "example": false,
                        "type": "boolean"
                    },
                    "uniqueGroupId": {
                        "description": "ObjectID of the unique user group that the managed user is a member of.",
                        "example": "ad402c42-1bc9-4ba5-9419-7dbfb46a9c4d",
                        "format": "uuid",
                        "pattern": "^[0-9a-f]{8}-[0-9a-f]{4}-[0-5][0-9a-f]{3}-[089ab][0-9a-f]{3}-[0-9a-f]{12}$",
                        "readOnly": true,
                        "type": "string"
                    }
                },
                "required": [
                    "creationDate",
                    "securityClass",
                    "uiEducation",
                    "uniqueGroupId",
                    "id",
                    "upn"
                ],
                "type": "object"
            },
            "ManagedUser.Privileged": {
                "title": "Managed User - Privileged",
                "description": "Additional settings that represent a privileged user object. All data in this structure is preserved in the settings engine's permanent storage system.",
                "allOf": [
                    {
                        "$ref": "#/components/schemas/ManagedUser"
                    },
                    {
                        "properties": {
                            "deviceAssignmentList": {
                                "type": "array",
                                "description": "List of devices that the privileged users are able to use as endpoints.",
                                "items": {
                                    "type": "string",
                                    "format": "uuid"
                                },
                                "example": [
                                    "0390fb3e-c58b-4d73-b02c-eae41ec5e4a5",
                                    "593d97dc-9a43-4bc7-9d79-ecde407d7782",
                                    "995f3b39-1e01-40d4-9368-ee956343e97c"
                                ]
                            },
                            "generatedPassword": {
                                "description": "The password that was created for the managed user upon managed user creation, this is not stored. This is only available once during user creation. If the password is lost, reset the PWD in Entra ID or have the user perform SSPR.",
                                "example": "GY_w7bZUKRgpIXctD0S2wg",
                                "readOnly": true,
                                "type": "string"
                            },
                            "parentId": {
                                "description": "The Entra ID Object ID of the object that the manged user is tied to. This value is only present on privileged users.",
                                "example": "e59a3a64-dc36-4368-80ec-c205eb176ef6",
                                "format": "uuid",
                                "maxLength": 36,
                                "minLength": 36,
                                "pattern": "^[0-9a-f]{8}-[0-9a-f]{4}-[0-5][0-9a-f]{3}-[089ab][0-9a-f]{3}-[0-9a-f]{12}$",
                                "readOnly": true,
                                "type": "string"
                            },
                            "securityClass": {
                                "description": "Security class that indicates this user is a privileged user.",
                                "example": "Privileged",
                                "type": "string",
                                "enum": [
                                    "Privileged"
                                ]
                            },
                            "temporaryAccessPass": {
                                "description": "A TAP that was created for the managed user upon managed user creation, this is not stored. This is only available once during user creation. TAP expires at the configured tenant expiration time.",
                                "example": "BCKTSN#E2R&5",
                                "readOnly": true,
                                "type": "string"
                            }
                        },
                        "required": [
                            "deviceAssignmentList",
                            "parentId",
                            "securityClass"
                        ],
                        "type": "object"
                    }
                ]
            },
            "ObjectPage.Intermediary.AVD": {
                "properties": {
                    "@odata.count": {
                        "nullable": true,
                        "type": "number"
                    },
                    "@odata.nextLink": {
                        "nullable": true,
                        "type": "string"
                    },
                    "value": {
                        "items": {
                            "allOf": [
                                {
                                    "$ref": "#/components/schemas/Intermediary"
                                },
                                {
                                    "properties": {
                                        "properties": {
                                            "$ref": "#/components/schemas/Intermediary.AVD"
                                        }
                                    },
                                    "type": "object"
                                }
                            ]
                        },
                        "minItems": 0,
                        "type": "array"
                    }
                },
                "required": [
                    "value"
                ],
                "title": "Page of AVD Intermediary Objects",
                "type": "object"
            },
            "ObjectPage.ManagedDevice": {
                "properties": {
                    "@odata.count": {
                        "nullable": true,
                        "type": "number"
                    },
                    "@odata.nextLink": {
                        "nullable": true,
                        "type": "string"
                    },
                    "value": {
                        "items": {
                            "oneOf": [
                                {
                                    "$ref": "#/components/schemas/ManagedDevice"
                                },
                                {
                                    "$ref": "#/components/schemas/ManagedDevice.Privileged"
                                }
                            ]
                        },
                        "minItems": 0,
                        "type": "array"
                    }
                },
                "required": [
                    "value"
                ],
                "title": "Page of Managed Device Objects",
                "type": "object"
            },
            "ObjectPage.ManagedUser": {
                "properties": {
                    "@odata.count": {
                        "nullable": true,
                        "type": "number"
                    },
                    "@odata.nextLink": {
                        "nullable": true,
                        "type": "string"
                    },
                    "value": {
                        "items": {
                            "oneOf":[
                                {
                                    "$ref": "#/components/schemas/ManagedUser"
                                },
                                {
                                    "$ref": "#/components/schemas/ManagedUser.Privileged"
                                }
                            ]
                        },
                        "minItems": 0,
                        "type": "array"
                    }
                },
                "required": [
                    "value"
                ],
                "title": "Page of Managed User Objects",
                "type": "object"
            },
            "SecurityClassList": {
                "description": "Security class types as described in https://learn.microsoft.com/en-us/security/compass/privileged-access-security-levels.",
                "enum": [
                    "Privileged",
                    "Specialized",
                    "Enterprise",
                    "Unmanaged"
                ],
                "example": "Privileged",
                "title": "Type of security class the object(s) belongs to",
                "type": "string"
            }
        },
        "securitySchemes": {
            "EntraID": {
                "type": "http",
                "scheme": "bearer",
                "bearerFormat": "JWT",
                "description": "The Access Token from Entra ID for the App ID of `ID HERE`."
            }
        }
    },
    "externalDocs": {
        "description": "Official Documentation",
        "url": "https://docs.shilab.com"
    },
    "info": {
        "contact": {
            "email": "elliot_huffman@shi.com",
            "name": "SHI - Lab"
        },
        "description": "Deprive your threats of practical significance. Deploy the Securing Privilege Access architecture. All in a few seconds.",
        "title": "SHI Orchestration Platform",
        "version": "appVersionFromConfigEngine"
    },
    "openapi": "3.0.0",
    "paths": {
        "/API/Core/SystemRequirements": {
            "get": {
                "description": "Provides a detailed breakdown of if the system requirements are being met for the various components of the SHIELD platform.",
                "operationId": "/API/Core/GetSystemRequirements",
                "responses": {
                    "200": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Core.SystemRequirements"
                                }
                            }
                        },
                        "description": "OK"
                    }
                },
                "tags": [
                    "Core"
                ],
                "security": [],
                "summary": "Indicates if the System Requirements are met or not."
            }
        },
        "/API/Auth/Id": {
            "get": {
                "description": "Provides the Tenant ID and the Application ID of the service principal that access tokens need to be issued against. This is also useful for configuring public clients to be able to authenticate to for auth code flows.",
                "operationId": "/API/Auth/GetId",
                "responses": {
                    "200": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "appId": {
                                            "description": "Application ID that should be used in Access Tokens as the audience and the endpoint necessary for auth code flows.",
                                            "type": "string",
                                            "format": "uuid"
                                        },
                                        "tenantId": {
                                            "description": "Tenant ID necessary for authority host URL configuration and UI customization.",
                                            "type": "string",
                                            "format": "uuid"
                                        }
                                    },
                                    "type": "object",
                                    "required": [
                                        "appId",
                                        "tenantId"
                                    ]
                                }
                            }
                        },
                        "description": "OK"
                    },
                    "525": {
                        "$ref": "#/components/responses/525"
                    }
                },
                "tags": [
                    "Authentication"
                ],
                "security": [],
                "summary": "Retrieves the IDs required to authenticate."
            }
        },
        "/API/Auth/Authenticator": {
            "get": {
                "summary": "Provides Attestation for Authenticator App",
                "description": "Provides the attestation to the authenticator that this endpoint is authorized for receiving credentials from the authenticator.",
                "operationId": "/API/Auth/GetAuthenticator",
                "responses": {
                    "200": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "description": "Access token that the SHIELD platform uses to prove it is a valid recipient of credentials.",
                                    "type": "string",
                                    "example": "eyJ0eXAiOiJKV1QiLCJhbGciOiJSUzI1NiIsImtpZCI6Ik1jN2wzSXo5M2c3dXdnTmVFbW13X1dZR1BrbyJ9.eyJhdWQiOiJjYjU5ZjIyOC0wNjkwLTRhY2ItOWE3Yi0wMGMzNmEyZjRlOGQiLCJpc3MiOiJodHRwczovL2xvZ2luLm1pY3Jvc29mdG9ubGluZS5jb20vMmQxMDJkYTktZDExZS00YTgwLTkwMjItYzQxOGZhNDg1NGM3L3YyLjAiLCJpYXQiOjE3MjczNjgzODQsIm5iZiI6MTcyNzM2ODM4NCwiZXhwIjoxNzI3MzcyMjg0LCJhaW8iOiJBU1FBMi84WUFBQUFSN0hyaW5XTmRwcisvdnoreWlkZER6WVExeFRpc3BSZGY4TG1XNjhRaE0wPSIsImF6cCI6IjRlODU5MTQ2LWY5M2UtNDlmMi05ODZmLWI3MjIyNmZjZDViOSIsImF6cGFjciI6IjEiLCJvaWQiOiJlMmRlNzQ0ZC1hZjVlLTQ4NDEtYmI4Zi02OTRkZDI1ZmVmNGQiLCJyaCI6IjAuQWNvQXFTMFFMUjdSZ0VxUUlzUVkta2hVeHlqeVdjdVFCc3RLbW5zQXcyb3ZUbzM2QUFBLiIsInJvbGVzIjpbIkF1dGhlbnRpY2F0b3IuQXR0ZXN0Il0sInN1YiI6ImUyZGU3NDRkLWFmNWUtNDg0MS1iYjhmLTY5NGRkMjVmZWY0ZCIsInRpZCI6IjJkMTAyZGE5LWQxMWUtNGE4MC05MDIyLWM0MThmYTQ4NTRjNyIsInV0aSI6Il9MaUdVWWxmS2txNFZoR09NeGw4QUEiLCJ2ZXIiOiIyLjAifQ.xlXZfOnDoOVW3_aOiSIZH8uiySeohro-HVnDzDEff2EjmOk9adrTOP5Sw1av6g3vy38r6dSu4tViwNGrb7Z2krgRKKvp-4A9rkPqeJjjd2rhFl2KiOlxL0mmykbroZZ70RJzwHy2GC7wfuLwJwr-5m7POV2grbxIAlTsMdZWDFXYi-AahfDVtLugarWG5-tXAqiPBKjaU6ntAJIbu7Ol1vYZaeYMsNKTs8O1P10YM460zN9OkfoI1gV7_InHEr8RSyQnEPCJ2W1Or4lDhqdey4ohMoP9EzLgMsn9Ckss5g5C6vVE0GQawUoeGozPOBpgb31J8JzZUyB1JyVfi-vKkQ"
                                }
                            }
                        },
                        "description": "OK"
                    }
                },
                "tags": [
                    "Authentication"
                ]
            }
        },
        "/API/Auth/Authenticator/Cache/Status": {
            "get": {
                "summary": "Indicates if SHIELD is waiting for any credentials.",
                "description": "Provides a breakdown view of if the platform is waiting for any specific type of credential or credentials.",
                "operationId": "/API/Auth/Authenticator/Cache/GetStatus",
                "responses": {
                    "200": {
                        "content": {
                            "application/json": {
                                "examples": {
                                    "Waiting on Nothing": {
                                        "description": "No credentials are being requested at the moment.",
                                        "value": {
                                            "accessToken": false,
                                            "sccAuth": false
                                        }
                                    },
                                    "Waiting on Access Token": {
                                        "description": "Waiting on an Access Token with the Audience of the Legacy Windows Graph API.",
                                        "value": {
                                            "accessToken": {
                                                "audience": "00000002-0000-0000-c000-000000000000"
                                            },
                                            "sccAuth": false
                                        }
                                    },
                                    "Waiting on SccAuth": {
                                        "description": "Waiting on an SCC Auth data from the SHIELD - Authenticator App.",
                                        "value": {
                                            "accessToken": false,
                                            "sccAuth": true
                                        }
                                    }
                                },
                                "schema": {
                                    "$ref": "#/components/schemas/Shield.Authenticator.Status"
                                }
                            }
                        },
                        "description": "OK"
                    }
                },
                "tags": [
                    "Authentication"
                ]
            }
        },
        "/API/Auth/Authenticator/Cache/SccAuth": {
            "post": {
                "description": "Provide your SHIELD authenticator credentials",
                "operationId": "/API/Auth/Authenticator/Cache/PostSccAuth",
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/Shield.Authenticator.Container.Credentials"
                            }
                        }
                    }
                },
                "responses": {
                    "204": {
                        "description": "Credential was successfully stored"
                    }
                },
                "summary": "Configure the  web server to support and process the authentication API routes",
                "tags": [
                    "Authentication"
                ]
            }
        },
        "/API/Auth/Authenticator/Cache/AccessToken": {
            "post": {
                "summary": "Receive Access Token Credentials",
                "description": "SHIELD Authenticator credentials for the requested Access Token.",
                "operationId": "/API/Auth/Authenticator/Cache/PostAccessToken",
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "description": "Access Token to be stored in the SHIELD authentication engine.",
                                "type": "object",
                                "properties": {
                                    "token": {
                                        "description": "This is transmitted as a property instead of a raw string as the body parser ignores it in Express.JS. Functionally identical though.",
                                        "type": "string",
                                        "example": "eyJ0eXAiOiJKV1QiLCJhbGciOiJSUzI1NiIsImtpZCI6Ik1jN2wzSXo5M2c3dXdnTmVFbW13X1dZR1BrbyJ9.eyJhdWQiOiI0YzQwMjgxYi1hMzA1LTRhYWYtOTBhNC1kNWJiZWU2ZWI4ZWQiLCJpc3MiOiJodHRwczovL2xvZ2luLm1pY3Jvc29mdG9ubGluZS5jb20vMmQxMDJkYTktZDExZS00YTgwLTkwMjItYzQxOGZhNDg1NGM3L3YyLjAiLCJpYXQiOjE3MjczNzUzNzMsIm5iZiI6MTcyNzM3NTM3MywiZXhwIjoxNzI3Mzc5MjczLCJhaW8iOiJrMkJnWU9BM1ByL2lTc2loRmYzeU9uVk40UTZOc1dsZnRnWEhoMW5HYm5saWVuS1hRZ2tBIiwiYXpwIjoiNGU4NTkxNDYtZjkzZS00OWYyLTk4NmYtYjcyMjI2ZmNkNWI5IiwiYXpwYWNyIjoiMSIsIm9pZCI6ImUyZGU3NDRkLWFmNWUtNDg0MS1iYjhmLTY5NGRkMjVmZWY0ZCIsInJoIjoiMC5BY29BcVMwUUxSN1JnRXFRSXNRWS1raFV4eHNvUUV3Rm82OUtrS1RWdS01dXVPMzZBQUEuIiwicm9sZXMiOlsiVGVsZW1ldHJ5LlNvcC5SZWFkV3JpdGUiLCJMaWNlbnNlUmVwb3J0LlJlYWRXcml0ZSJdLCJzdWIiOiJlMmRlNzQ0ZC1hZjVlLTQ4NDEtYmI4Zi02OTRkZDI1ZmVmNGQiLCJ0aWQiOiIyZDEwMmRhOS1kMTFlLTRhODAtOTAyMi1jNDE4ZmE0ODU0YzciLCJ1dGkiOiJfTGlHVVlsZktrcTRWaEdPXzNpRkFBIiwidmVyIjoiMi4wIn0.CZMOfyo5Lo1Km8bgWtOw8f30n1AZ5HJQ-StyIPr_P_eEjanzHVSEiRsHweNATW0GQFfLs0lGH43xztFcNNepu7CctyEzoktJ-9De2mMLIMJviF1rlB19mxH3a3hUSPZuPeYPPONkYtjL4fZj0mCYcALoq-orc0Oswg0l3fatbS7a-DAgxZdLHa6M7OtXksMlMXwooxmocOQeg_zhpko1zyuzSsVwNrz1uMZYpivwaM1ImWZiqgjMc1NWCN2Co1nYNuvxg6Chcr0OOsPRaXayfzrP7IlsZIg5Itg9lrqN0cjT3t8GSejL2P8HmfPcYftlqOobCesjSfBthir5hGUoNA"
                                    }
                                },
                                "example": {
                                    "token": "eyJ0eXAiOiJKV1QiLCJhbGciOiJSUzI1NiIsImtpZCI6Ik1jN2wzSXo5M2c3dXdnTmVFbW13X1dZR1BrbyJ9.eyJhdWQiOiI0YzQwMjgxYi1hMzA1LTRhYWYtOTBhNC1kNWJiZWU2ZWI4ZWQiLCJpc3MiOiJodHRwczovL2xvZ2luLm1pY3Jvc29mdG9ubGluZS5jb20vMmQxMDJkYTktZDExZS00YTgwLTkwMjItYzQxOGZhNDg1NGM3L3YyLjAiLCJpYXQiOjE3MjczNzUzNzMsIm5iZiI6MTcyNzM3NTM3MywiZXhwIjoxNzI3Mzc5MjczLCJhaW8iOiJrMkJnWU9BM1ByL2lTc2loRmYzeU9uVk40UTZOc1dsZnRnWEhoMW5HYm5saWVuS1hRZ2tBIiwiYXpwIjoiNGU4NTkxNDYtZjkzZS00OWYyLTk4NmYtYjcyMjI2ZmNkNWI5IiwiYXpwYWNyIjoiMSIsIm9pZCI6ImUyZGU3NDRkLWFmNWUtNDg0MS1iYjhmLTY5NGRkMjVmZWY0ZCIsInJoIjoiMC5BY29BcVMwUUxSN1JnRXFRSXNRWS1raFV4eHNvUUV3Rm82OUtrS1RWdS01dXVPMzZBQUEuIiwicm9sZXMiOlsiVGVsZW1ldHJ5LlNvcC5SZWFkV3JpdGUiLCJMaWNlbnNlUmVwb3J0LlJlYWRXcml0ZSJdLCJzdWIiOiJlMmRlNzQ0ZC1hZjVlLTQ4NDEtYmI4Zi02OTRkZDI1ZmVmNGQiLCJ0aWQiOiIyZDEwMmRhOS1kMTFlLTRhODAtOTAyMi1jNDE4ZmE0ODU0YzciLCJ1dGkiOiJfTGlHVVlsZktrcTRWaEdPXzNpRkFBIiwidmVyIjoiMi4wIn0.CZMOfyo5Lo1Km8bgWtOw8f30n1AZ5HJQ-StyIPr_P_eEjanzHVSEiRsHweNATW0GQFfLs0lGH43xztFcNNepu7CctyEzoktJ-9De2mMLIMJviF1rlB19mxH3a3hUSPZuPeYPPONkYtjL4fZj0mCYcALoq-orc0Oswg0l3fatbS7a-DAgxZdLHa6M7OtXksMlMXwooxmocOQeg_zhpko1zyuzSsVwNrz1uMZYpivwaM1ImWZiqgjMc1NWCN2Co1nYNuvxg6Chcr0OOsPRaXayfzrP7IlsZIg5Itg9lrqN0cjT3t8GSejL2P8HmfPcYftlqOobCesjSfBthir5hGUoNA"
                                }
                            }
                        }
                    }
                },
                "responses": {
                    "204": {
                        "description": "Credential was successfully stored"
                    },
                    "400": {
                        "description": "Invalid Access Token"
                    }
                },
                "tags": [
                    "Authentication"
                ]
            }
        },
        "/API/Discover/Status": {
            "get": {
                "summary": "State of the Discover Module.",
                "description": "Provides a detailed breakdown of the current state of the discover module and it progress.",
                "operationId": "/API/Discover/GetStatus",
                "responses": {
                    "200": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Shield.Discover.Status"
                                }
                            }
                        },
                        "description": "OK"
                    }
                },
                "tags": [
                    "Discover"
                ]
            }
        },
        "/API/Discover/Report": {
            "get": {
                "summary": "Start Discover's Report Generation",
                "description": "Starts the Discover module's report collection engine to create a license report and upload it to the data gateway.",
                "operationId": "/API/Discover/GetReport",
                "responses": {
                    "202": {
                        "$ref": "#/components/responses/202"
                    },
                    "409": {
                        "$ref": "#/components/responses/409"
                    }
                },
                "tags": [
                    "Discover"
                ]
            }
        },
        "/API/Infrastructure/Deploy": {
            "get": {
                "description": "Has the core infrastructure engine check if the config engine can initialize properly.",
                "operationId": "/API/Infrastructure/GetDeploy",
                "responses": {
                    "200": {
                        "content": {
                            "application/json": {
                                "examples": {
                                    "infra deployed": {
                                        "description": "All API calls should be available since the core infrastructure is deployed.",
                                        "summary": "Infrastructure is deployed",
                                        "value": true
                                    },
                                    "Infra not deployed": {
                                        "description": "Infrastructure is not deployed. Please run the deployment before attempting different API calls.",
                                        "summary": "Infrastructure is not deployed",
                                        "value": false
                                    }
                                },
                                "schema": {
                                    "type": "boolean"
                                }
                            }
                        },
                        "description": "OK"
                    },
                    "401": {
                        "$ref": "#/components/responses/401"
                    }
                },
                "summary": "Get the current status of the infrastructure deployment",
                "tags": [
                    "Infrastructure Deployment"
                ]
            },
            "post": {
                "description": "After the user consents, deploy the core security groups, scope tag, configurations and metadata.",
                "operationId": "/API/Infrastructure/PostDeploy",
                "requestBody": {
                    "content": {
                        "application/json": {
                            "examples": {
                                "Ignorant Deploy Request": {
                                    "description": "Clueless dev trying to automate this application without reading the docs. RTFM!",
                                    "summary": "Ignorant Deploy Request",
                                    "value": {}
                                },
                                "No User Consent": {
                                    "description": "User did not agree to the terms and conditions. This post should not have been sent.",
                                    "summary": "User Did Not Consent",
                                    "value": {
                                        "deploymentConsent": false
                                    }
                                },
                                "User Consented": {
                                    "description": "User agreed to the terms and conditions and pressed the deploy button.",
                                    "summary": "User Consented",
                                    "value": {
                                        "deploymentConsent": true
                                    }
                                }
                            },
                            "schema": {
                                "properties": {
                                    "deploymentConsent": {
                                        "type": "boolean"
                                    }
                                },
                                "type": "object"
                            }
                        }
                    }
                },
                "responses": {
                    "204": {
                        "content": {
                            "application/json": {
                                "examples": {
                                    "Successful Deployment": {
                                        "description": "When a deployment request is successfully executed, a boolean true is returned.",
                                        "summary": "Successful Deployment",
                                        "value": true
                                    }
                                },
                                "schema": {
                                    "type": "boolean"
                                }
                            }
                        },
                        "description": "OK"
                    },
                    "401": {
                        "$ref": "#/components/responses/401"
                    }
                },
                "summary": "Deploy the core infrastructure architecture specification",
                "tags": [
                    "Infrastructure Deployment"
                ],
                "security": []
            }
        },
        "/API/Infrastructure/Version": {
            "get": {
                "description": "Gets the version of the API server and the architecture version deployed as well as the supported version of the architecture spec from the server.",
                "operationId": "/API/Infrastructure/GetVersion",
                "responses": {
                    "200": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "apiVersion": {
                                            "description": "Follows symantec versioning as laid out here: https://semver.org/. This number is the version of the API server.",
                                            "example": "1.2.3",
                                            "type": "string"
                                        },
                                        "archSpecVersion": {
                                            "description": "An incrementing number that describes the version of the architecture specification that the API supports.",
                                            "example": 123,
                                            "type": "number"
                                        },
                                        "deployedArchVersion": {
                                            "description": "The version of the architecture specification that is currently deployed.",
                                            "example": 25,
                                            "type": "number"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        },
                        "description": "OK"
                    },
                    "401": {
                        "$ref": "#/components/responses/401"
                    }
                },
                "summary": "Gets the version of SOPs components",
                "tags": [
                    "Infrastructure Deployment"
                ]
            }
        },
        "/API/Intermediary/Type/{securityClass}/Offering/8a921026-ec06-4e08-af19-8812e161e61f/Instance": {
            "get": {
                "description": "Retrieves a list of all AVD intermediaries for the specified security class filter. Next links may be provided for pagination to allow for good performance on larger environments. If a nextLink is return, not all data was returned on this query and the next link can be sent back to the API to get the next page of data.",
                "operationId": "/API/Intermediary/AVD/GetAll",
                "parameters": [
                    {
                        "$ref": "#/components/parameters/securityClass"
                    },
                    {
                        "$ref": "#/components/parameters/nextLink"
                    },
                    {
                        "$ref": "#/components/parameters/search"
                    }
                ],
                "responses": {
                    "200": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ObjectPage.Intermediary.AVD"
                                }
                            }
                        },
                        "description": "OK"
                    },
                    "401": {
                        "$ref": "#/components/responses/401"
                    },
                    "525": {
                        "$ref": "#/components/responses/525"
                    }
                },
                "summary": "Retrieves all AVD Intermediary Instances",
                "tags": [
                    "Intermediary"
                ]
            }
        },
        "/API/Intermediary/Type/{securityClass}/Offering/8a921026-ec06-4e08-af19-8812e161e61f/Instance/{instanceId}": {
            "delete": {
                "description": "Deletes the specified intermediary (by the parent group's Entra ID Object ID) using the requested security class as a filter.",
                "operationId": "/API/Intermediary/AVD/DeleteInstance",
                "parameters": [
                    {
                        "$ref": "#/components/parameters/securityClass"
                    },
                    {
                        "$ref": "#/components/parameters/instanceId"
                    }
                ],
                "responses": {
                    "204": {
                        "description": "OK: Deleted successfully"
                    },
                    "401": {
                        "$ref": "#/components/responses/401"
                    },
                    "404": {
                        "$ref": "#/components/responses/404"
                    },
                    "525": {
                        "$ref": "#/components/responses/525"
                    }
                },
                "summary": "Deletes a Single AVD Intermediary Instance",
                "tags": [
                    "Intermediary"
                ]
            },
            "get": {
                "description": "Retrieves the specified intermediary (by the parent group's Entra ID Object ID) using the requested security class as a filter.",
                "operationId": "/API/Intermediary/AVD/GetInstance",
                "parameters": [
                    {
                        "$ref": "#/components/parameters/securityClass"
                    },
                    {
                        "$ref": "#/components/parameters/instanceId"
                    }
                ],
                "responses": {
                    "200": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ObjectPage.Intermediary.AVD"
                                }
                            }
                        },
                        "description": "OK"
                    },
                    "401": {
                        "$ref": "#/components/responses/401"
                    },
                    "404": {
                        "$ref": "#/components/responses/404"
                    },
                    "525": {
                        "$ref": "#/components/responses/525"
                    }
                },
                "summary": "Retrieves a Single AVD Intermediary Instance",
                "tags": [
                    "Intermediary"
                ]
            }
        },
        "/API/Intermediary/Type/{securityClass}/Offering/8a921026-ec06-4e08-af19-8812e161e61f/Instance/{instanceId}/Assign": {
            "delete": {
                "description": "Removes the specified user(s) as identified by their Object ID from the AVD cluster and deletes their corresponding session host(s).",
                "operationId": "/API/Intermediary/AVD/Instance/RemoveAssign",
                "parameters": [
                    {
                        "$ref": "#/components/parameters/securityClass"
                    },
                    {
                        "$ref": "#/components/parameters/instanceId"
                    }
                ],
                "requestBody": {
                    "content": {
                        "application/json": {
                            "examples": {
                                "One user": {
                                    "description": "Removes 1 session host, and removed the requested user from the assignments security group.",
                                    "summary": "Remove Single User",
                                    "value": {
                                        "userList": [
                                            "cf5b12a9-b939-4d5c-a380-fb62e4fe88ef"
                                        ]
                                    }
                                },
                                "Two users": {
                                    "description": "Removes 3 session hosts, and removed the requested users from the assignments security group.",
                                    "summary": "Remove Multiple Users",
                                    "value": {
                                        "userList": [
                                            "0c56b055-9042-4f54-8e6e-6510e12a81dc",
                                            "dd27937c-6287-45b3-98de-387725b068f3",
                                            "989d3dc1-43f4-4ff7-82ba-43661f94a428"
                                        ]
                                    }
                                }
                            },
                            "schema": {
                                "properties": {
                                    "userList": {
                                        "items": {
                                            "format": "uuid",
                                            "pattern": "^[0-9a-f]{8}-[0-9a-f]{4}-[0-5][0-9a-f]{3}-[089ab][0-9a-f]{3}-[0-9a-f]{12}$",
                                            "type": "string"
                                        },
                                        "type": "array"
                                    }
                                },
                                "type": "object"
                            }
                        }
                    }
                },
                "responses": {
                    "204": {
                        "description": "OK: Deleted successfully"
                    },
                    "401": {
                        "$ref": "#/components/responses/401"
                    },
                    "404": {
                        "$ref": "#/components/responses/404"
                    },
                    "525": {
                        "$ref": "#/components/responses/525"
                    }
                },
                "summary": "Removes the assignment of the specified users",
                "tags": [
                    "Intermediary"
                ]
            },
            "get": {
                "description": "Gets the list of assigned user from the specified AVD Intermediary.",
                "operationId": "/API/Intermediary/AVD/Instance/GetAssign",
                "parameters": [
                    {
                        "$ref": "#/components/parameters/securityClass"
                    },
                    {
                        "$ref": "#/components/parameters/instanceId"
                    },
                    {
                        "$ref": "#/components/parameters/nextLink"
                    }
                ],
                "responses": {
                    "200": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "items": {
                                        "$ref": "#/components/schemas/ManagedUser"
                                    },
                                    "maxItems": 1,
                                    "minItems": 0,
                                    "type": "array"
                                }
                            }
                        },
                        "description": "OK"
                    },
                    "401": {
                        "$ref": "#/components/responses/401"
                    },
                    "404": {
                        "$ref": "#/components/responses/404"
                    },
                    "525": {
                        "$ref": "#/components/responses/525"
                    }
                },
                "summary": "List all assigned users (paginated)",
                "tags": [
                    "Intermediary"
                ]
            },
            "post": {
                "description": "Assigns the specified user(s) as identified by their Object ID to the AVD cluster and create corresponding session host(s) for them.",
                "operationId": "/API/Intermediary/AVD/Instance/Assign",
                "parameters": [
                    {
                        "$ref": "#/components/parameters/securityClass"
                    },
                    {
                        "$ref": "#/components/parameters/instanceId"
                    }
                ],
                "requestBody": {
                    "content": {
                        "application/json": {
                            "examples": {
                                "One user": {
                                    "description": "Creates 1 session host, and added the requested user to the assignments security group.",
                                    "summary": "Assign Single User",
                                    "value": {
                                        "userList": [
                                            "cf5b12a9-b939-4d5c-a380-fb62e4fe88ef"
                                        ]
                                    }
                                },
                                "Two users": {
                                    "description": "Creates 3 session hosts, and added the requested users to the assignments security group.",
                                    "summary": "Assign Multiple Users",
                                    "value": {
                                        "userList": [
                                            "0c56b055-9042-4f54-8e6e-6510e12a81dc",
                                            "dd27937c-6287-45b3-98de-387725b068f3",
                                            "989d3dc1-43f4-4ff7-82ba-43661f94a428"
                                        ]
                                    }
                                }
                            },
                            "schema": {
                                "properties": {
                                    "userList": {
                                        "items": {
                                            "format": "uuid",
                                            "pattern": "^[0-9a-f]{8}-[0-9a-f]{4}-[0-5][0-9a-f]{3}-[089ab][0-9a-f]{3}-[0-9a-f]{12}$",
                                            "type": "string"
                                        },
                                        "type": "array"
                                    }
                                },
                                "type": "object"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "items": {
                                        "$ref": "#/components/schemas/ManagedUser"
                                    },
                                    "minItems": 0,
                                    "type": "array"
                                }
                            }
                        },
                        "description": "OK"
                    },
                    "401": {
                        "$ref": "#/components/responses/401"
                    },
                    "404": {
                        "$ref": "#/components/responses/404"
                    },
                    "525": {
                        "$ref": "#/components/responses/525"
                    }
                },
                "summary": "Assigns the list of specified users",
                "tags": [
                    "Intermediary"
                ]
            }
        },
        "/API/Intermediary/Type/{securityClass}/Offering/8a921026-ec06-4e08-af19-8812e161e61f/Instance/{instanceId}/Assign/{userId}": {
            "get": {
                "description": "Get the specified managed user's from the specified AVD intermediary assignment list.",
                "operationId": "/API/Intermediary/AVD/Instance/GetSpecificAssign",
                "parameters": [
                    {
                        "$ref": "#/components/parameters/securityClass"
                    },
                    {
                        "$ref": "#/components/parameters/instanceId"
                    },
                    {
                        "$ref": "#/components/parameters/userId"
                    }
                ],
                "responses": {
                    "200": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "items": {
                                        "$ref": "#/components/schemas/ManagedUser"
                                    },
                                    "minItems": 0,
                                    "type": "array"
                                }
                            }
                        },
                        "description": "OK"
                    },
                    "401": {
                        "$ref": "#/components/responses/401"
                    },
                    "404": {
                        "$ref": "#/components/responses/404"
                    },
                    "525": {
                        "$ref": "#/components/responses/525"
                    }
                },
                "summary": "Get a specific assigned user",
                "tags": [
                    "Intermediary"
                ]
            }
        },
        "/API/Lifecycle/Type/Privileged/Device/{deviceId}/Assign": {
            "delete": {
                "description": "Remove the specified user list from the device.",
                "operationId": "/API/lifecycle/DeleteDeviceAssignment",
                "parameters": [
                    {
                        "$ref": "#/components/parameters/deviceId"
                    }
                ],
                "requestBody": {
                    "content": {
                        "application/json": {
                            "examples": {
                                "Multiple Users": {
                                    "description": "Remove multiple user assignments from a managed device.",
                                    "summary": "Unassign multiple users",
                                    "value": {
                                        "userList": [
                                            "0674276a-31e8-4773-8ed9-6fb49dbd0fa8",
                                            "66714224-b1a6-4fd6-b9d8-5263fdf755fc"
                                        ]
                                    }
                                },
                                "Single User": {
                                    "description": "Remove a single user assignment from a managed device.",
                                    "summary": "Unassign one user",
                                    "value": {
                                        "userList": [
                                            "01ebf268-cf28-4607-954a-261dfd480453"
                                        ]
                                    }
                                }
                            },
                            "schema": {
                                "properties": {
                                    "userList": {
                                        "items": {
                                            "example": "d1bc9d1a-5a30-4d66-898a-1dd300e707bc",
                                            "format": "uuid",
                                            "pattern": "^[0-9a-f]{8}-[0-9a-f]{4}-[0-5][0-9a-f]{3}-[089ab][0-9a-f]{3}-[0-9a-f]{12}$",
                                            "type": "string"
                                        },
                                        "type": "array"
                                    }
                                },
                                "type": "object"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "items": {
                                        "$ref": "#/components/schemas/ManagedUser"
                                    },
                                    "minItems": 0,
                                    "type": "array"
                                }
                            }
                        },
                        "description": "OK"
                    },
                    "401": {
                        "$ref": "#/components/responses/401"
                    },
                    "525": {
                        "$ref": "#/components/responses/525"
                    }
                },
                "summary": "Remove User Assignments",
                "tags": [
                    "Device Management"
                ]
            },
            "get": {
                "description": "Lists all of the users that are currently assigned to the specified device.",
                "operationId": "/API/lifecycle/GetDeviceAssignment",
                "parameters": [
                    {
                        "$ref": "#/components/parameters/deviceId"
                    }
                ],
                "responses": {
                    "200": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "items": {
                                        "$ref": "#/components/schemas/ManagedUser"
                                    },
                                    "minItems": 0,
                                    "type": "array"
                                }
                            }
                        },
                        "description": "OK"
                    },
                    "401": {
                        "$ref": "#/components/responses/401"
                    },
                    "525": {
                        "$ref": "#/components/responses/525"
                    }
                },
                "summary": "List User Assignments",
                "tags": [
                    "Device Management"
                ]
            },
            "post": {
                "description": "Adds the specified list of users to the list of users that are allowed to log in on the specific privileged device.",
                "operationId": "/API/lifecycle/ReplaceDeviceAssignment",
                "parameters": [
                    {
                        "$ref": "#/components/parameters/deviceId"
                    }
                ],
                "requestBody": {
                    "content": {
                        "application/json": {
                            "examples": {
                                "1:1 map": {
                                    "description": "This example is the security best practice of having only one user mapped to a managed device.",
                                    "summary": "1:1 User Mapping",
                                    "value": {
                                        "userList": [
                                            "user@contoso.com"
                                        ]
                                    }
                                },
                                "Multi-User Managed Device": {
                                    "description": "This example is the security best practice of having only one user mapped to a managed device.",
                                    "summary": "Multi-User Assignment",
                                    "value": {
                                        "userList": [
                                            "user@contoso.com",
                                            "anotherUser@contoso.com"
                                        ]
                                    }
                                }
                            },
                            "schema": {
                                "properties": {
                                    "userList": {
                                        "items": {
                                            "example": "d1bc9d1a-5a30-4d66-898a-1dd300e707bc",
                                            "format": "uuid",
                                            "pattern": "^[0-9a-f]{8}-[0-9a-f]{4}-[0-5][0-9a-f]{3}-[089ab][0-9a-f]{3}-[0-9a-f]{12}$",
                                            "type": "string"
                                        },
                                        "type": "array"
                                    }
                                },
                                "type": "object"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "items": {
                                        "$ref": "#/components/schemas/ManagedUser"
                                    },
                                    "minItems": 0,
                                    "type": "array"
                                }
                            }
                        },
                        "description": "OK"
                    },
                    "401": {
                        "$ref": "#/components/responses/401"
                    },
                    "525": {
                        "$ref": "#/components/responses/525"
                    }
                },
                "summary": "Add User Assignments",
                "tags": [
                    "Device Management"
                ]
            }
        },
        "/API/Lifecycle/Type/{securityClass}/Device": {
            "get": {
                "description": "Returns a list of all commissioned devices managed by the SHI Orchestration Platform app.",
                "operationId": "/API/lifecycle/GetDeviceList",
                "parameters": [
                    {
                        "$ref": "#/components/parameters/securityClass"
                    },
                    {
                        "$ref": "#/components/parameters/nextLink"
                    },
                    {
                        "$ref": "#/components/parameters/search"
                    }
                ],
                "responses": {
                    "200": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ObjectPage.ManagedDevice"
                                }
                            }
                        },
                        "description": "OK"
                    },
                    "401": {
                        "$ref": "#/components/responses/401"
                    },
                    "525": {
                        "$ref": "#/components/responses/525"
                    }
                },
                "summary": "Get a list of all managed devices",
                "tags": [
                    "Device Management"
                ]
            },
            "post": {
                "description": "Commissions a new device, into the device hierarchy and appends appropriate metadata and initial policies. Appends required metadata to proper locations.",
                "operationId": "/API/lifecycle/CreateDevice",
                "parameters": [
                    {
                        "$ref": "#/components/parameters/securityClass"
                    }
                ],
                "requestBody": {
                    "content": {
                        "application/json": {
                            "example": {
                                "deviceId": "f7e1a66f-ce2e-4351-83df-2776813ef95d"
                            },
                            "schema": {
                                "properties": {
                                    "deviceId": {
                                        "description": "The SOP ID (Entra ID Device ID) of the device to target.",
                                        "example": "75da7fa4-4a04-44c8-8f2c-c1b2fa29aa51",
                                        "format": "uuid",
                                        "maxLength": 36,
                                        "minLength": 36,
                                        "pattern": "^[0-9a-f]{8}-[0-9a-f]{4}-[0-5][0-9a-f]{3}-[089ab][0-9a-f]{3}-[0-9a-f]{12}$",
                                        "type": "string"
                                    }
                                },
                                "required": [
                                    "deviceId"
                                ],
                                "type": "object"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ManagedDevice"
                                }
                            }
                        },
                        "description": "OK"
                    },
                    "401": {
                        "$ref": "#/components/responses/401"
                    },
                    "404": {
                        "$ref": "#/components/responses/404"
                    },
                    "525": {
                        "$ref": "#/components/responses/525"
                    }
                },
                "summary": "Commission a new device.",
                "tags": [
                    "Device Management"
                ]
            }
        },
        "/API/Lifecycle/Type/{securityClass}/Device/{deviceId}": {
            "delete": {
                "description": "Removes the device from the management hierarchy, removes metadata tagging and issues the wipe command to the devices.",
                "operationId": "/API/lifecycle/DeleteDevice",
                "parameters": [
                    {
                        "$ref": "#/components/parameters/securityClass"
                    },
                    {
                        "$ref": "#/components/parameters/deviceId"
                    }
                ],
                "responses": {
                    "204": {
                        "description": "OK: Deleted successfully"
                    },
                    "401": {
                        "$ref": "#/components/responses/401"
                    },
                    "404": {
                        "$ref": "#/components/responses/404"
                    },
                    "525": {
                        "$ref": "#/components/responses/525"
                    }
                },
                "summary": "Decommission specified device.",
                "tags": [
                    "Device Management"
                ]
            },
            "get": {
                "description": "Get the specified managed device by its Entra ID Device ID.",
                "operationId": "/API/lifecycle/GetDevice",
                "parameters": [
                    {
                        "$ref": "#/components/parameters/securityClass"
                    },
                    {
                        "$ref": "#/components/parameters/deviceId"
                    }
                ],
                "responses": {
                    "200": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ManagedDevice"
                                }
                            }
                        },
                        "description": "OK"
                    },
                    "401": {
                        "$ref": "#/components/responses/401"
                    },
                    "404": {
                        "$ref": "#/components/responses/404"
                    },
                    "525": {
                        "$ref": "#/components/responses/525"
                    }
                },
                "summary": "Get the specified device by its ID",
                "tags": [
                    "Device Management"
                ]
            }
        },
        "/API/Lifecycle/Type/{securityClass}/User": {
            "get": {
                "description": "Returns a list of all users managed by the SHI Orchestration Platform app.",
                "operationId": "/API/Lifecycle/GetUserList",
                "parameters": [
                    {
                        "$ref": "#/components/parameters/securityClass"
                    },
                    {
                        "$ref": "#/components/parameters/nextLink"
                    },
                    {
                        "$ref": "#/components/parameters/search"
                    }
                ],
                "responses": {
                    "200": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ObjectPage.ManagedUser"
                                }
                            }
                        },
                        "description": "OK"
                    },
                    "401": {
                        "$ref": "#/components/responses/401"
                    },
                    "525": {
                        "$ref": "#/components/responses/525"
                    }
                },
                "summary": "Get a list of all managed users.",
                "tags": [
                    "User Management"
                ]
            },
            "post": {
                "description": "Securely clones the specified user's properties into a new managed user object.",
                "operationId": "/API/lifecycle/CreateUser",
                "parameters": [
                    {
                        "$ref": "#/components/parameters/securityClass"
                    }
                ],
                "requestBody": {
                    "content": {
                        "application/json": {
                            "example": {
                                "userId": "d886680d-a283-4fc2-803f-370d81d62366"
                            },
                            "schema": {
                                "properties": {
                                    "userId": {
                                        "description": "The Entra ID object ID of the user to clone.",
                                        "example": "264a8bed-0714-48fd-8b9d-0e4c4715cee5",
                                        "format": "uuid",
                                        "maxLength": 36,
                                        "minLength": 36,
                                        "pattern": "^[0-9a-f]{8}-[0-9a-f]{4}-[0-5][0-9a-f]{3}-[089ab][0-9a-f]{3}-[0-9a-f]{12}$",
                                        "type": "string"
                                    }
                                },
                                "required": [
                                    "userId"
                                ],
                                "type": "object"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ManagedUser"
                                }
                            }
                        },
                        "description": "OK"
                    },
                    "401": {
                        "$ref": "#/components/responses/401"
                    },
                    "404": {
                        "$ref": "#/components/responses/404"
                    },
                    "409": {
                        "description": "User is already managed."
                    },
                    "525": {
                        "$ref": "#/components/responses/525"
                    }
                },
                "summary": "Create a new managed user with the based on the user ID specified.",
                "tags": [
                    "User Management"
                ]
            }
        },
        "/API/Lifecycle/Type/{securityClass}/User/{userId}": {
            "delete": {
                "description": "Deletes the user account and removes the management artifacts.",
                "operationId": "/API/lifecycle/DeleteUser",
                "parameters": [
                    {
                        "$ref": "#/components/parameters/securityClass"
                    },
                    {
                        "$ref": "#/components/parameters/userId"
                    }
                ],
                "responses": {
                    "204": {
                        "description": "OK: Deleted successfully"
                    },
                    "401": {
                        "$ref": "#/components/responses/401"
                    },
                    "404": {
                        "$ref": "#/components/responses/404"
                    },
                    "525": {
                        "$ref": "#/components/responses/525"
                    }
                },
                "summary": "Delete the specified managed user.",
                "tags": [
                    "User Management"
                ]
            },
            "get": {
                "description": "Retrieves the specified managed user by its Entra ID User ID",
                "operationId": "/API/lifecycle/GetUser",
                "parameters": [
                    {
                        "$ref": "#/components/parameters/securityClass"
                    },
                    {
                        "$ref": "#/components/parameters/userId"
                    }
                ],
                "responses": {
                    "200": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ManagedUser"
                                }
                            }
                        },
                        "description": "OK"
                    },
                    "401": {
                        "$ref": "#/components/responses/401"
                    },
                    "404": {
                        "$ref": "#/components/responses/404"
                    },
                    "525": {
                        "$ref": "#/components/responses/525"
                    }
                },
                "summary": "Gets the specified managed user",
                "tags": [
                    "User Management"
                ]
            },
            "patch": {
                "description": "Updates the user's mutable data such as their display name, uiEducation or first/last name. All other properties passed will be ignored.",
                "operationId": "/API/lifecycle/UpdateUser",
                "parameters": [
                    {
                        "$ref": "#/components/parameters/securityClass"
                    },
                    {
                        "$ref": "#/components/parameters/userId"
                    }
                ],
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/ManagedUser"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ManagedUser"
                                }
                            }
                        },
                        "description": "OK"
                    },
                    "401": {
                        "$ref": "#/components/responses/401"
                    },
                    "404": {
                        "$ref": "#/components/responses/404"
                    },
                    "525": {
                        "$ref": "#/components/responses/525"
                    }
                },
                "summary": "Update a managed user with the specified data.",
                "tags": [
                    "User Management"
                ]
            }
        },
        "/API/Marketplace/": {
            "get": {
                "description": "Lists all of the available marketplace offerings along with their metadata.",
                "operationId": "/API/Marketplace/Offering/ListAll",
                "responses": {
                    "401": {
                        "$ref": "#/components/responses/401"
                    },
                    "525": {
                        "$ref": "#/components/responses/525"
                    }
                },
                "summary": "List All Available Offerings",
                "tags": [
                    "Marketplace"
                ]
            }
        },
        "/API/Marketplace/Type/{securityClass}/Offering/{offeringId}": {
            "post": {
                "description": "Creates the offering with the requested settings. In the body payload, the `type` property in the `property` object is ignored. See the AVD example.",
                "operationId": "/API/Marketplace/Offering/Create",
                "parameters": [
                    {
                        "$ref": "#/components/parameters/securityClass"
                    },
                    {
                        "$ref": "#/components/parameters/offeringId"
                    }
                ],
                "requestBody": {
                    "content": {
                        "application/json": {
                            "examples": {
                                "Azure Bastion": {
                                    "description": "lorem ipsum!",
                                    "summary": "Azure Bastion",
                                    "value": "lorem ipsum!"
                                },
                                "Azure Virtual Desktop": {
                                    "description": "Deploys an AVD cluster that is connected to the device configurations system in SOP. The type property can be omitted because it is passed via path parameter.",
                                    "summary": "Azure Virtual Desktop",
                                    "value": {
                                        "name": "Legacy Reach Back",
                                        "properties": {
                                            "addressRangeCIDR": "172.16.1.0/24",
                                            "index": 0,
                                            "location": "East US 2",
                                            "sessionHostPrefix": "Reach",
                                            "vmSku": "Standard_D2s_v5"
                                        }
                                    }
                                }
                            },
                            "schema": {
                                "allOf": [
                                    {
                                        "$ref": "#/components/schemas/Intermediary"
                                    },
                                    {
                                        "properties": {
                                            "properties": {
                                                "$ref": "#/components/schemas/Intermediary.AVD"
                                            }
                                        },
                                        "type": "object"
                                    }
                                ]
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Intermediary.AVD"
                                }
                            }
                        },
                        "description": "OK"
                    },
                    "401": {
                        "$ref": "#/components/responses/401"
                    },
                    "404": {
                        "$ref": "#/components/responses/404"
                    },
                    "525": {
                        "$ref": "#/components/responses/525"
                    }
                },
                "summary": "Deploy a Marketplace Offering",
                "tags": [
                    "Marketplace"
                ]
            }
        },
        "/Docs": {
            "get": {
                "description": "Runs the Swagger UI render to render the OpenAPI spec that you are viewing now.",
                "operationId": "/Docs/GetSwaggerUi",
                "responses": {
                    "200": {
                        "description": "Returns the HTML for Swagger UI renderer's output"
                    }
                },
                "summary": "Render this Swagger UI",
                "tags": [
                    "Debug Mode"
                ],
                "security": []
            }
        }
    },
    "security": [
        {
            "EntraID": []
        }
    ],
    "servers": [
        {
            "description": "A secured connection to the app, only secured connections should be used for production.",
            "url": "https://contoso.local:443/"
        },
        {
            "description": "Used only for local dev, never host this app without network encryption.",
            "url": "http://contoso.local:80/"
        }
    ],
    "tags": [
        {
            "description": "Configures the specified web server to support and process the authentication API routes.",
            "name": "Core"
        },
        {
            "description": "Used to manage UI and API authentication.",
            "name": "Authentication"
        },
        {
            "description": "License Analytics info.",
            "name": "Discover"
        },
        {
            "description": "Device lifecycle management.",
            "name": "Device Management"
        },
        {
            "description": "User lifecycle management.",
            "name": "User Management"
        },
        {
            "description": "Manages the lifecycle of the various intermediary system types.",
            "name": "Intermediary"
        },
        {
            "description": "Metadata and deployment management for market offerings. Lifecycle management is not handled in this route.",
            "name": "Marketplace"
        },
        {
            "description": "Checks the status and starts deployment of the core infrastructure.",
            "name": "Infrastructure Deployment"
        },
        {
            "description": "WARNING AUTHENTICATION IS DISABLED WHEN DEBUG MODE IS ENABLED!!! Endpoints that are exposed only in debug mode. You can use these to see as the app sees.",
            "name": "Debug Mode"
        }
    ]
}
